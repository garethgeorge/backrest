// @generated by protoc-gen-es v2.10.0 with parameter "target=ts"
// @generated from file v1/syncservice.proto (package v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Plan, Repo } from "./config_pb";
import { file_v1_config } from "./config_pb";
import type { PublicKey, SignedMessage } from "./crypto_pb";
import { file_v1_crypto } from "./crypto_pb";
import { file_v1_restic } from "./restic_pb";
import type { OpSelector } from "./service_pb";
import { file_v1_service } from "./service_pb";
import type { OperationEvent } from "./operations_pb";
import { file_v1_operations } from "./operations_pb";
import { file_types_value } from "../types/value_pb";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/syncservice.proto.
 */
export const file_v1_syncservice: GenFile = /*@__PURE__*/
  fileDesc("ChR2MS9zeW5jc2VydmljZS5wcm90bxICdjEijAEKDVR1bm5lbE1lc3NhZ2USDwoHY29ubl9pZBgBIAEoAxINCgVzZXFubxgCIAEoAxIMCgRkYXRhGAMgASgMEg0KBWNsb3NlGAQgASgIEhoKEnB1YmtleV9lY2RoX3gyNTUxORhkIAEoDBIiCgNhbnkY6AcgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSIrChZTeW5jU3RhdGVTdHJlYW1SZXF1ZXN0EhEKCXN1YnNjcmliZRgBIAEoCCLrAQoJUGVlclN0YXRlEhgKEHBlZXJfaW5zdGFuY2VfaWQYASABKAkSEgoKcGVlcl9rZXlpZBgCIAEoCRImCgVzdGF0ZRgDIAEoDjIXLnYxLlN5bmNDb25uZWN0aW9uU3RhdGUSFgoOc3RhdHVzX21lc3NhZ2UYBCABKAkSEwoLa25vd25fcGxhbnMYBSADKAkSEwoLa25vd25fcmVwb3MYBiADKAkSJwoNcmVtb3RlX2NvbmZpZxgHIAEoCzIQLnYxLlJlbW90ZUNvbmZpZxIdChVsYXN0X2hlYXJ0YmVhdF9taWxsaXMYCCABKAMigAwKDlN5bmNTdHJlYW1JdGVtEisKDnNpZ25lZF9tZXNzYWdlGAEgASgLMhEudjEuU2lnbmVkTWVzc2FnZUgAEjsKCWhhbmRzaGFrZRgDIAEoCzImLnYxLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25IYW5kc2hha2VIABI7CgloZWFydGJlYXQYBCABKAsyJi52MS5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uSGVhcnRiZWF0SAASRgoPZGlmZl9vcGVyYXRpb25zGBQgASgLMisudjEuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvbkRpZmZPcGVyYXRpb25zSAASRgoPc2VuZF9vcGVyYXRpb25zGBUgASgLMisudjEuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvblNlbmRPcGVyYXRpb25zSAASPgoLc2VuZF9jb25maWcYFiABKAsyJy52MS5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uU2VuZENvbmZpZ0gAEjwKCnNldF9jb25maWcYGCABKAsyJi52MS5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uU2V0Q29uZmlnSAASRAoObGlzdF9yZXNvdXJjZXMYGSABKAsyKi52MS5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uTGlzdFJlc291cmNlc0gAEjoKCHRocm90dGxlGOgHIAEoCzIlLnYxLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25UaHJvdHRsZUgAGnoKE1N5bmNBY3Rpb25IYW5kc2hha2USGAoQcHJvdG9jb2xfdmVyc2lvbhgBIAEoAxIhCgpwdWJsaWNfa2V5GAIgASgLMg0udjEuUHVibGljS2V5EiYKC2luc3RhbmNlX2lkGAMgASgLMhEudjEuU2lnbmVkTWVzc2FnZRoVChNTeW5jQWN0aW9uSGVhcnRiZWF0GjgKFFN5bmNBY3Rpb25TZW5kQ29uZmlnEiAKBmNvbmZpZxgBIAEoCzIQLnYxLlJlbW90ZUNvbmZpZxp5ChNTeW5jQWN0aW9uU2V0Q29uZmlnEhcKBXJlcG9zGAEgAygLMggudjEuUmVwbxIXCgVwbGFucxgCIAMoCzIILnYxLlBsYW4SFwoPcmVwb3NfdG9fZGVsZXRlGAMgAygJEhcKD3BsYW5zX3RvX2RlbGV0ZRgEIAMoCRo9ChdTeW5jQWN0aW9uTGlzdFJlc291cmNlcxIQCghyZXBvX2lkcxgBIAMoCRIQCghwbGFuX2lkcxgCIAMoCRooChVTeW5jQWN0aW9uQ29ubmVjdFJlcG8SDwoHcmVwb19pZBgBIAEoCRqjAQoYU3luY0FjdGlvbkRpZmZPcGVyYXRpb25zEjAKGGhhdmVfb3BlcmF0aW9uc19zZWxlY3RvchgBIAEoCzIOLnYxLk9wU2VsZWN0b3ISGgoSaGF2ZV9vcGVyYXRpb25faWRzGAIgAygDEh0KFWhhdmVfb3BlcmF0aW9uX21vZG5vcxgDIAMoAxIaChJyZXF1ZXN0X29wZXJhdGlvbnMYBCADKAMaPQoYU3luY0FjdGlvblNlbmRPcGVyYXRpb25zEiEKBWV2ZW50GAEgASgLMhIudjEuT3BlcmF0aW9uRXZlbnQaJgoSU3luY0FjdGlvblRocm90dGxlEhAKCGRlbGF5X21zGAEgASgDGjgKGVN5bmNFc3RhYmxpc2hTaGFyZWRTZWNyZXQSGwoHZWQyNTUxORgCIAEoCVIKZWQyNTUxOXB1YiK0AQoTUmVwb0Nvbm5lY3Rpb25TdGF0ZRIcChhDT05ORUNUSU9OX1NUQVRFX1VOS05PV04QABIcChhDT05ORUNUSU9OX1NUQVRFX1BFTkRJTkcQARIeChpDT05ORUNUSU9OX1NUQVRFX0NPTk5FQ1RFRBACEiEKHUNPTk5FQ1RJT05fU1RBVEVfVU5BVVRIT1JJWkVEEAMSHgoaQ09OTkVDVElPTl9TVEFURV9OT1RfRk9VTkQQBEIICgZhY3Rpb24iYAoMUmVtb3RlQ29uZmlnEg0KBW1vZG5vGAEgASgFEg8KB3ZlcnNpb24YAiABKAUSFwoFcmVwb3MYAyADKAsyCC52MS5SZXBvEhcKBXBsYW5zGAQgAygLMggudjEuUGxhbiqgAgoTU3luY0Nvbm5lY3Rpb25TdGF0ZRIcChhDT05ORUNUSU9OX1NUQVRFX1VOS05PV04QABIcChhDT05ORUNUSU9OX1NUQVRFX1BFTkRJTkcQARIeChpDT05ORUNUSU9OX1NUQVRFX0NPTk5FQ1RFRBACEiEKHUNPTk5FQ1RJT05fU1RBVEVfRElTQ09OTkVDVEVEEAMSHwobQ09OTkVDVElPTl9TVEFURV9SRVRSWV9XQUlUEAQSHwobQ09OTkVDVElPTl9TVEFURV9FUlJPUl9BVVRIEAoSIwofQ09OTkVDVElPTl9TVEFURV9FUlJPUl9QUk9UT0NPTBALEiMKH0NPTk5FQ1RJT05fU1RBVEVfRVJST1JfSU5URVJOQUwQDDJFCg1UdW5uZWxTZXJ2aWNlEjQKBlR1bm5lbBIRLnYxLlR1bm5lbE1lc3NhZ2UaES52MS5UdW5uZWxNZXNzYWdlIgAoATABMksKE0JhY2tyZXN0U3luY1NlcnZpY2USNAoEU3luYxISLnYxLlN5bmNTdHJlYW1JdGVtGhIudjEuU3luY1N0cmVhbUl0ZW0iACgBMAEyZAoYQmFja3Jlc3RTeW5jU3RhdGVTZXJ2aWNlEkgKF0dldFBlZXJTeW5jU3RhdGVzU3RyZWFtEhoudjEuU3luY1N0YXRlU3RyZWFtUmVxdWVzdBoNLnYxLlBlZXJTdGF0ZSIAMAFCLFoqZ2l0aHViLmNvbS9nYXJldGhnZW9yZ2UvYmFja3Jlc3QvZ2VuL2dvL3YxYgZwcm90bzM", [file_v1_config, file_v1_crypto, file_v1_restic, file_v1_service, file_v1_operations, file_types_value, file_google_protobuf_empty, file_google_api_annotations, file_google_protobuf_any]);

/**
 * @generated from message v1.TunnelMessage
 */
export type TunnelMessage = Message<"v1.TunnelMessage"> & {
  /**
   * The connection ID this request belongs to, enables multiplexing.
   *
   * @generated from field: int64 conn_id = 1;
   */
  connId: bigint;

  /**
   * @generated from field: int64 seqno = 2;
   */
  seqno: bigint;

  /**
   * The data to send, this is a raw byte stream.
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;

  /**
   * If true, the write end should be closed after this request.
   *
   * @generated from field: bool close = 4;
   */
  close: boolean;

  /**
   * The public key used for ECDH key exchange, binary encoded.
   *
   * @generated from field: bytes pubkey_ecdh_x25519 = 100;
   */
  pubkeyEcdhX25519: Uint8Array;

  /**
   * Available to allow sending custom data down the tunnel in the initial handshake.
   *
   * @generated from field: google.protobuf.Any any = 1000;
   */
  any?: Any;
};

/**
 * Describes the message v1.TunnelMessage.
 * Use `create(TunnelMessageSchema)` to create a new message.
 */
export const TunnelMessageSchema: GenMessage<TunnelMessage> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 0);

/**
 * @generated from message v1.SyncStateStreamRequest
 */
export type SyncStateStreamRequest = Message<"v1.SyncStateStreamRequest"> & {
  /**
   * If true, the stream will continue to send updates until cancelled.
   *
   * @generated from field: bool subscribe = 1;
   */
  subscribe: boolean;
};

/**
 * Describes the message v1.SyncStateStreamRequest.
 * Use `create(SyncStateStreamRequestSchema)` to create a new message.
 */
export const SyncStateStreamRequestSchema: GenMessage<SyncStateStreamRequest> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 1);

/**
 * @generated from message v1.PeerState
 */
export type PeerState = Message<"v1.PeerState"> & {
  /**
   * @generated from field: string peer_instance_id = 1;
   */
  peerInstanceId: string;

  /**
   * @generated from field: string peer_keyid = 2;
   */
  peerKeyid: string;

  /**
   * @generated from field: v1.SyncConnectionState state = 3;
   */
  state: SyncConnectionState;

  /**
   * @generated from field: string status_message = 4;
   */
  statusMessage: string;

  /**
   * List of plan IDs that the peer has.
   *
   * @generated from field: repeated string known_plans = 5;
   */
  knownPlans: string[];

  /**
   * List of repo IDs that the peer has.
   *
   * @generated from field: repeated string known_repos = 6;
   */
  knownRepos: string[];

  /**
   * The remote config of the peer, if available.
   *
   * @generated from field: v1.RemoteConfig remote_config = 7;
   */
  remoteConfig?: RemoteConfig;

  /**
   * The last time the peer sent a heartbeat, in milliseconds since epoch.
   *
   * @generated from field: int64 last_heartbeat_millis = 8;
   */
  lastHeartbeatMillis: bigint;
};

/**
 * Describes the message v1.PeerState.
 * Use `create(PeerStateSchema)` to create a new message.
 */
export const PeerStateSchema: GenMessage<PeerState> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 2);

/**
 * @generated from message v1.SyncStreamItem
 */
export type SyncStreamItem = Message<"v1.SyncStreamItem"> & {
  /**
   * @generated from oneof v1.SyncStreamItem.action
   */
  action: {
    /**
     * @generated from field: v1.SignedMessage signed_message = 1;
     */
    value: SignedMessage;
    case: "signedMessage";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionHandshake handshake = 3;
     */
    value: SyncStreamItem_SyncActionHandshake;
    case: "handshake";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionHeartbeat heartbeat = 4;
     */
    value: SyncStreamItem_SyncActionHeartbeat;
    case: "heartbeat";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionDiffOperations diff_operations = 20;
     */
    value: SyncStreamItem_SyncActionDiffOperations;
    case: "diffOperations";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionSendOperations send_operations = 21;
     */
    value: SyncStreamItem_SyncActionSendOperations;
    case: "sendOperations";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionSendConfig send_config = 22;
     */
    value: SyncStreamItem_SyncActionSendConfig;
    case: "sendConfig";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionSetConfig set_config = 24;
     */
    value: SyncStreamItem_SyncActionSetConfig;
    case: "setConfig";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionListResources list_resources = 25;
     */
    value: SyncStreamItem_SyncActionListResources;
    case: "listResources";
  } | {
    /**
     * @generated from field: v1.SyncStreamItem.SyncActionThrottle throttle = 1000;
     */
    value: SyncStreamItem_SyncActionThrottle;
    case: "throttle";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message v1.SyncStreamItem.
 * Use `create(SyncStreamItemSchema)` to create a new message.
 */
export const SyncStreamItemSchema: GenMessage<SyncStreamItem> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3);

/**
 * @generated from message v1.SyncStreamItem.SyncActionHandshake
 */
export type SyncStreamItem_SyncActionHandshake = Message<"v1.SyncStreamItem.SyncActionHandshake"> & {
  /**
   * @generated from field: int64 protocol_version = 1;
   */
  protocolVersion: bigint;

  /**
   * @generated from field: v1.PublicKey public_key = 2;
   */
  publicKey?: PublicKey;

  /**
   * @generated from field: v1.SignedMessage instance_id = 3;
   */
  instanceId?: SignedMessage;
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionHandshake.
 * Use `create(SyncStreamItem_SyncActionHandshakeSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionHandshakeSchema: GenMessage<SyncStreamItem_SyncActionHandshake> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 0);

/**
 * SyncActionHeartbeat is sent periodically to keep the connection alive.
 *
 * @generated from message v1.SyncStreamItem.SyncActionHeartbeat
 */
export type SyncStreamItem_SyncActionHeartbeat = Message<"v1.SyncStreamItem.SyncActionHeartbeat"> & {
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionHeartbeat.
 * Use `create(SyncStreamItem_SyncActionHeartbeatSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionHeartbeatSchema: GenMessage<SyncStreamItem_SyncActionHeartbeat> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 1);

/**
 * @generated from message v1.SyncStreamItem.SyncActionSendConfig
 */
export type SyncStreamItem_SyncActionSendConfig = Message<"v1.SyncStreamItem.SyncActionSendConfig"> & {
  /**
   * @generated from field: v1.RemoteConfig config = 1;
   */
  config?: RemoteConfig;
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionSendConfig.
 * Use `create(SyncStreamItem_SyncActionSendConfigSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionSendConfigSchema: GenMessage<SyncStreamItem_SyncActionSendConfig> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 2);

/**
 * @generated from message v1.SyncStreamItem.SyncActionSetConfig
 */
export type SyncStreamItem_SyncActionSetConfig = Message<"v1.SyncStreamItem.SyncActionSetConfig"> & {
  /**
   * @generated from field: repeated v1.Repo repos = 1;
   */
  repos: Repo[];

  /**
   * @generated from field: repeated v1.Plan plans = 2;
   */
  plans: Plan[];

  /**
   * @generated from field: repeated string repos_to_delete = 3;
   */
  reposToDelete: string[];

  /**
   * @generated from field: repeated string plans_to_delete = 4;
   */
  plansToDelete: string[];
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionSetConfig.
 * Use `create(SyncStreamItem_SyncActionSetConfigSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionSetConfigSchema: GenMessage<SyncStreamItem_SyncActionSetConfig> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 3);

/**
 * @generated from message v1.SyncStreamItem.SyncActionListResources
 */
export type SyncStreamItem_SyncActionListResources = Message<"v1.SyncStreamItem.SyncActionListResources"> & {
  /**
   * List of repo IDs that can be accessed.
   *
   * @generated from field: repeated string repo_ids = 1;
   */
  repoIds: string[];

  /**
   * List of plan IDs that can be accessed.
   *
   * @generated from field: repeated string plan_ids = 2;
   */
  planIds: string[];
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionListResources.
 * Use `create(SyncStreamItem_SyncActionListResourcesSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionListResourcesSchema: GenMessage<SyncStreamItem_SyncActionListResources> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 4);

/**
 * @generated from message v1.SyncStreamItem.SyncActionConnectRepo
 */
export type SyncStreamItem_SyncActionConnectRepo = Message<"v1.SyncStreamItem.SyncActionConnectRepo"> & {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId: string;
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionConnectRepo.
 * Use `create(SyncStreamItem_SyncActionConnectRepoSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionConnectRepoSchema: GenMessage<SyncStreamItem_SyncActionConnectRepo> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 5);

/**
 * @generated from message v1.SyncStreamItem.SyncActionDiffOperations
 */
export type SyncStreamItem_SyncActionDiffOperations = Message<"v1.SyncStreamItem.SyncActionDiffOperations"> & {
  /**
   * Client connects and sends a list of "have_operations" that exist in its log.
   * have_operation_ids and have_operation_modnos are the operation IDs and modnos that the client has when zip'd pairwise.
   *
   * @generated from field: v1.OpSelector have_operations_selector = 1;
   */
  haveOperationsSelector?: OpSelector;

  /**
   * @generated from field: repeated int64 have_operation_ids = 2;
   */
  haveOperationIds: bigint[];

  /**
   * @generated from field: repeated int64 have_operation_modnos = 3;
   */
  haveOperationModnos: bigint[];

  /**
   * Server sends a list of "request_operations" for any operations that it doesn't have.
   *
   * @generated from field: repeated int64 request_operations = 4;
   */
  requestOperations: bigint[];
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionDiffOperations.
 * Use `create(SyncStreamItem_SyncActionDiffOperationsSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionDiffOperationsSchema: GenMessage<SyncStreamItem_SyncActionDiffOperations> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 6);

/**
 * @generated from message v1.SyncStreamItem.SyncActionSendOperations
 */
export type SyncStreamItem_SyncActionSendOperations = Message<"v1.SyncStreamItem.SyncActionSendOperations"> & {
  /**
   * @generated from field: v1.OperationEvent event = 1;
   */
  event?: OperationEvent;
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionSendOperations.
 * Use `create(SyncStreamItem_SyncActionSendOperationsSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionSendOperationsSchema: GenMessage<SyncStreamItem_SyncActionSendOperations> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 7);

/**
 * @generated from message v1.SyncStreamItem.SyncActionThrottle
 */
export type SyncStreamItem_SyncActionThrottle = Message<"v1.SyncStreamItem.SyncActionThrottle"> & {
  /**
   * @generated from field: int64 delay_ms = 1;
   */
  delayMs: bigint;
};

/**
 * Describes the message v1.SyncStreamItem.SyncActionThrottle.
 * Use `create(SyncStreamItem_SyncActionThrottleSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionThrottleSchema: GenMessage<SyncStreamItem_SyncActionThrottle> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 8);

/**
 * @generated from message v1.SyncStreamItem.SyncEstablishSharedSecret
 */
export type SyncStreamItem_SyncEstablishSharedSecret = Message<"v1.SyncStreamItem.SyncEstablishSharedSecret"> & {
  /**
   * a one-time-use ed25519 public key with a matching unshared private key. Used to perform a key exchange.
   * See https://pkg.go.dev/crypto/ecdh#PrivateKey.ECDH .
   *
   * base64 encoded public key
   *
   * @generated from field: string ed25519 = 2 [json_name = "ed25519pub"];
   */
  ed25519: string;
};

/**
 * Describes the message v1.SyncStreamItem.SyncEstablishSharedSecret.
 * Use `create(SyncStreamItem_SyncEstablishSharedSecretSchema)` to create a new message.
 */
export const SyncStreamItem_SyncEstablishSharedSecretSchema: GenMessage<SyncStreamItem_SyncEstablishSharedSecret> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 3, 9);

/**
 * @generated from enum v1.SyncStreamItem.RepoConnectionState
 */
export enum SyncStreamItem_RepoConnectionState {
  /**
   * @generated from enum value: CONNECTION_STATE_UNKNOWN = 0;
   */
  CONNECTION_STATE_UNKNOWN = 0,

  /**
   * queried, response not yet received.
   *
   * @generated from enum value: CONNECTION_STATE_PENDING = 1;
   */
  CONNECTION_STATE_PENDING = 1,

  /**
   * @generated from enum value: CONNECTION_STATE_CONNECTED = 2;
   */
  CONNECTION_STATE_CONNECTED = 2,

  /**
   * @generated from enum value: CONNECTION_STATE_UNAUTHORIZED = 3;
   */
  CONNECTION_STATE_UNAUTHORIZED = 3,

  /**
   * @generated from enum value: CONNECTION_STATE_NOT_FOUND = 4;
   */
  CONNECTION_STATE_NOT_FOUND = 4,
}

/**
 * Describes the enum v1.SyncStreamItem.RepoConnectionState.
 */
export const SyncStreamItem_RepoConnectionStateSchema: GenEnum<SyncStreamItem_RepoConnectionState> = /*@__PURE__*/
  enumDesc(file_v1_syncservice, 3, 0);

/**
 * RemoteConfig contains shareable properties from a remote backrest instance.
 *
 * @generated from message v1.RemoteConfig
 */
export type RemoteConfig = Message<"v1.RemoteConfig"> & {
  /**
   * The modno of the config.
   *
   * @generated from field: int32 modno = 1;
   */
  modno: number;

  /**
   * The storage version of the config.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;

  /**
   * @generated from field: repeated v1.Repo repos = 3;
   */
  repos: Repo[];

  /**
   * @generated from field: repeated v1.Plan plans = 4;
   */
  plans: Plan[];
};

/**
 * Describes the message v1.RemoteConfig.
 * Use `create(RemoteConfigSchema)` to create a new message.
 */
export const RemoteConfigSchema: GenMessage<RemoteConfig> = /*@__PURE__*/
  messageDesc(file_v1_syncservice, 4);

/**
 * @generated from enum v1.SyncConnectionState
 */
export enum SyncConnectionState {
  /**
   * @generated from enum value: CONNECTION_STATE_UNKNOWN = 0;
   */
  CONNECTION_STATE_UNKNOWN = 0,

  /**
   * @generated from enum value: CONNECTION_STATE_PENDING = 1;
   */
  CONNECTION_STATE_PENDING = 1,

  /**
   * @generated from enum value: CONNECTION_STATE_CONNECTED = 2;
   */
  CONNECTION_STATE_CONNECTED = 2,

  /**
   * @generated from enum value: CONNECTION_STATE_DISCONNECTED = 3;
   */
  CONNECTION_STATE_DISCONNECTED = 3,

  /**
   * @generated from enum value: CONNECTION_STATE_RETRY_WAIT = 4;
   */
  CONNECTION_STATE_RETRY_WAIT = 4,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_AUTH = 10;
   */
  CONNECTION_STATE_ERROR_AUTH = 10,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_PROTOCOL = 11;
   */
  CONNECTION_STATE_ERROR_PROTOCOL = 11,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_INTERNAL = 12;
   */
  CONNECTION_STATE_ERROR_INTERNAL = 12,
}

/**
 * Describes the enum v1.SyncConnectionState.
 */
export const SyncConnectionStateSchema: GenEnum<SyncConnectionState> = /*@__PURE__*/
  enumDesc(file_v1_syncservice, 0);

/**
 * TunnelService allows inverted communicatons from server to client where the server can initiate requests to the client.
 *
 * @generated from service v1.TunnelService
 */
export const TunnelService: GenService<{
  /**
   * @generated from rpc v1.TunnelService.Tunnel
   */
  tunnel: {
    methodKind: "bidi_streaming";
    input: typeof TunnelMessageSchema;
    output: typeof TunnelMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_syncservice, 0);

/**
 * BackrestSyncService provides methods to sync data between backrest instances.
 * This service provides its own authentication and authorization.
 *
 * @generated from service v1.BackrestSyncService
 */
export const BackrestSyncService: GenService<{
  /**
   * @generated from rpc v1.BackrestSyncService.Sync
   */
  sync: {
    methodKind: "bidi_streaming";
    input: typeof SyncStreamItemSchema;
    output: typeof SyncStreamItemSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_syncservice, 1);

/**
 * BackrestSyncStateService provides methods to query the sync state of known hosts and clients.
 * This service should be served behind authentication and authorization.
 *
 * @generated from service v1.BackrestSyncStateService
 */
export const BackrestSyncStateService: GenService<{
  /**
   * @generated from rpc v1.BackrestSyncStateService.GetPeerSyncStatesStream
   */
  getPeerSyncStatesStream: {
    methodKind: "server_streaming";
    input: typeof SyncStateStreamRequestSchema;
    output: typeof PeerStateSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_syncservice, 2);

