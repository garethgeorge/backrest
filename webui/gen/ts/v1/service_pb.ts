// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file v1/service.proto (package v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { OperationStatus } from "./operations_pb.js";

/**
 * OpSelector is a message that can be used to select operations e.g. by query.
 *
 * @generated from message v1.OpSelector
 */
export class OpSelector extends Message<OpSelector> {
  /**
   * @generated from field: repeated int64 ids = 1;
   */
  ids: bigint[] = [];

  /**
   * @generated from field: string repo_id = 2;
   */
  repoId = "";

  /**
   * @generated from field: string plan_id = 3;
   */
  planId = "";

  /**
   * @generated from field: string snapshot_id = 4;
   */
  snapshotId = "";

  /**
   * @generated from field: int64 flow_id = 5;
   */
  flowId = protoInt64.zero;

  constructor(data?: PartialMessage<OpSelector>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.OpSelector";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ids", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 2, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "plan_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "snapshot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "flow_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OpSelector {
    return new OpSelector().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OpSelector {
    return new OpSelector().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OpSelector {
    return new OpSelector().fromJsonString(jsonString, options);
  }

  static equals(a: OpSelector | PlainMessage<OpSelector> | undefined, b: OpSelector | PlainMessage<OpSelector> | undefined): boolean {
    return proto3.util.equals(OpSelector, a, b);
  }
}

/**
 * @generated from message v1.DoRepoTaskRequest
 */
export class DoRepoTaskRequest extends Message<DoRepoTaskRequest> {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId = "";

  /**
   * @generated from field: v1.DoRepoTaskRequest.Task task = 2;
   */
  task = DoRepoTaskRequest_Task.NONE;

  constructor(data?: PartialMessage<DoRepoTaskRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.DoRepoTaskRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "task", kind: "enum", T: proto3.getEnumType(DoRepoTaskRequest_Task) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DoRepoTaskRequest {
    return new DoRepoTaskRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DoRepoTaskRequest {
    return new DoRepoTaskRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DoRepoTaskRequest {
    return new DoRepoTaskRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DoRepoTaskRequest | PlainMessage<DoRepoTaskRequest> | undefined, b: DoRepoTaskRequest | PlainMessage<DoRepoTaskRequest> | undefined): boolean {
    return proto3.util.equals(DoRepoTaskRequest, a, b);
  }
}

/**
 * @generated from enum v1.DoRepoTaskRequest.Task
 */
export enum DoRepoTaskRequest_Task {
  /**
   * @generated from enum value: TASK_NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: TASK_INDEX_SNAPSHOTS = 1;
   */
  INDEX_SNAPSHOTS = 1,

  /**
   * @generated from enum value: TASK_PRUNE = 2;
   */
  PRUNE = 2,

  /**
   * @generated from enum value: TASK_CHECK = 3;
   */
  CHECK = 3,

  /**
   * @generated from enum value: TASK_STATS = 4;
   */
  STATS = 4,

  /**
   * @generated from enum value: TASK_UNLOCK = 5;
   */
  UNLOCK = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(DoRepoTaskRequest_Task)
proto3.util.setEnumType(DoRepoTaskRequest_Task, "v1.DoRepoTaskRequest.Task", [
  { no: 0, name: "TASK_NONE" },
  { no: 1, name: "TASK_INDEX_SNAPSHOTS" },
  { no: 2, name: "TASK_PRUNE" },
  { no: 3, name: "TASK_CHECK" },
  { no: 4, name: "TASK_STATS" },
  { no: 5, name: "TASK_UNLOCK" },
]);

/**
 * @generated from message v1.ClearHistoryRequest
 */
export class ClearHistoryRequest extends Message<ClearHistoryRequest> {
  /**
   * @generated from field: v1.OpSelector selector = 1;
   */
  selector?: OpSelector;

  /**
   * @generated from field: bool only_failed = 2;
   */
  onlyFailed = false;

  constructor(data?: PartialMessage<ClearHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.ClearHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "selector", kind: "message", T: OpSelector },
    { no: 2, name: "only_failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClearHistoryRequest {
    return new ClearHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClearHistoryRequest {
    return new ClearHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClearHistoryRequest {
    return new ClearHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ClearHistoryRequest | PlainMessage<ClearHistoryRequest> | undefined, b: ClearHistoryRequest | PlainMessage<ClearHistoryRequest> | undefined): boolean {
    return proto3.util.equals(ClearHistoryRequest, a, b);
  }
}

/**
 * @generated from message v1.ForgetRequest
 */
export class ForgetRequest extends Message<ForgetRequest> {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId = "";

  /**
   * @generated from field: string plan_id = 2;
   */
  planId = "";

  /**
   * @generated from field: string snapshot_id = 3;
   */
  snapshotId = "";

  constructor(data?: PartialMessage<ForgetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.ForgetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plan_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "snapshot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForgetRequest {
    return new ForgetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForgetRequest {
    return new ForgetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForgetRequest {
    return new ForgetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ForgetRequest | PlainMessage<ForgetRequest> | undefined, b: ForgetRequest | PlainMessage<ForgetRequest> | undefined): boolean {
    return proto3.util.equals(ForgetRequest, a, b);
  }
}

/**
 * @generated from message v1.ListSnapshotsRequest
 */
export class ListSnapshotsRequest extends Message<ListSnapshotsRequest> {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId = "";

  /**
   * @generated from field: string plan_id = 2;
   */
  planId = "";

  constructor(data?: PartialMessage<ListSnapshotsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.ListSnapshotsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plan_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSnapshotsRequest {
    return new ListSnapshotsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSnapshotsRequest {
    return new ListSnapshotsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSnapshotsRequest {
    return new ListSnapshotsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSnapshotsRequest | PlainMessage<ListSnapshotsRequest> | undefined, b: ListSnapshotsRequest | PlainMessage<ListSnapshotsRequest> | undefined): boolean {
    return proto3.util.equals(ListSnapshotsRequest, a, b);
  }
}

/**
 * @generated from message v1.GetOperationsRequest
 */
export class GetOperationsRequest extends Message<GetOperationsRequest> {
  /**
   * @generated from field: v1.OpSelector selector = 1;
   */
  selector?: OpSelector;

  /**
   * limit to the last n operations
   *
   * @generated from field: int64 last_n = 2;
   */
  lastN = protoInt64.zero;

  constructor(data?: PartialMessage<GetOperationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.GetOperationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "selector", kind: "message", T: OpSelector },
    { no: 2, name: "last_n", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOperationsRequest {
    return new GetOperationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOperationsRequest {
    return new GetOperationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOperationsRequest {
    return new GetOperationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOperationsRequest | PlainMessage<GetOperationsRequest> | undefined, b: GetOperationsRequest | PlainMessage<GetOperationsRequest> | undefined): boolean {
    return proto3.util.equals(GetOperationsRequest, a, b);
  }
}

/**
 * @generated from message v1.RestoreSnapshotRequest
 */
export class RestoreSnapshotRequest extends Message<RestoreSnapshotRequest> {
  /**
   * @generated from field: string plan_id = 1;
   */
  planId = "";

  /**
   * @generated from field: string repo_id = 5;
   */
  repoId = "";

  /**
   * @generated from field: string snapshot_id = 2;
   */
  snapshotId = "";

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  /**
   * @generated from field: string target = 4;
   */
  target = "";

  constructor(data?: PartialMessage<RestoreSnapshotRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RestoreSnapshotRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plan_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "snapshot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RestoreSnapshotRequest {
    return new RestoreSnapshotRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RestoreSnapshotRequest {
    return new RestoreSnapshotRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RestoreSnapshotRequest {
    return new RestoreSnapshotRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RestoreSnapshotRequest | PlainMessage<RestoreSnapshotRequest> | undefined, b: RestoreSnapshotRequest | PlainMessage<RestoreSnapshotRequest> | undefined): boolean {
    return proto3.util.equals(RestoreSnapshotRequest, a, b);
  }
}

/**
 * @generated from message v1.ListSnapshotFilesRequest
 */
export class ListSnapshotFilesRequest extends Message<ListSnapshotFilesRequest> {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId = "";

  /**
   * @generated from field: string snapshot_id = 2;
   */
  snapshotId = "";

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  constructor(data?: PartialMessage<ListSnapshotFilesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.ListSnapshotFilesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "snapshot_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSnapshotFilesRequest {
    return new ListSnapshotFilesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSnapshotFilesRequest {
    return new ListSnapshotFilesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSnapshotFilesRequest {
    return new ListSnapshotFilesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSnapshotFilesRequest | PlainMessage<ListSnapshotFilesRequest> | undefined, b: ListSnapshotFilesRequest | PlainMessage<ListSnapshotFilesRequest> | undefined): boolean {
    return proto3.util.equals(ListSnapshotFilesRequest, a, b);
  }
}

/**
 * @generated from message v1.ListSnapshotFilesResponse
 */
export class ListSnapshotFilesResponse extends Message<ListSnapshotFilesResponse> {
  /**
   * @generated from field: string path = 1;
   */
  path = "";

  /**
   * @generated from field: repeated v1.LsEntry entries = 2;
   */
  entries: LsEntry[] = [];

  constructor(data?: PartialMessage<ListSnapshotFilesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.ListSnapshotFilesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "entries", kind: "message", T: LsEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSnapshotFilesResponse {
    return new ListSnapshotFilesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSnapshotFilesResponse {
    return new ListSnapshotFilesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSnapshotFilesResponse {
    return new ListSnapshotFilesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSnapshotFilesResponse | PlainMessage<ListSnapshotFilesResponse> | undefined, b: ListSnapshotFilesResponse | PlainMessage<ListSnapshotFilesResponse> | undefined): boolean {
    return proto3.util.equals(ListSnapshotFilesResponse, a, b);
  }
}

/**
 * @generated from message v1.LogDataRequest
 */
export class LogDataRequest extends Message<LogDataRequest> {
  /**
   * @generated from field: string ref = 1;
   */
  ref = "";

  constructor(data?: PartialMessage<LogDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.LogDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogDataRequest {
    return new LogDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogDataRequest {
    return new LogDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogDataRequest {
    return new LogDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LogDataRequest | PlainMessage<LogDataRequest> | undefined, b: LogDataRequest | PlainMessage<LogDataRequest> | undefined): boolean {
    return proto3.util.equals(LogDataRequest, a, b);
  }
}

/**
 * @generated from message v1.LsEntry
 */
export class LsEntry extends Message<LsEntry> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string type = 2;
   */
  type = "";

  /**
   * @generated from field: string path = 3;
   */
  path = "";

  /**
   * @generated from field: int64 uid = 4;
   */
  uid = protoInt64.zero;

  /**
   * @generated from field: int64 gid = 5;
   */
  gid = protoInt64.zero;

  /**
   * @generated from field: int64 size = 6;
   */
  size = protoInt64.zero;

  /**
   * @generated from field: int64 mode = 7;
   */
  mode = protoInt64.zero;

  /**
   * @generated from field: string mtime = 8;
   */
  mtime = "";

  /**
   * @generated from field: string atime = 9;
   */
  atime = "";

  /**
   * @generated from field: string ctime = 10;
   */
  ctime = "";

  constructor(data?: PartialMessage<LsEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.LsEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "uid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "gid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "mode", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "mtime", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "atime", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "ctime", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LsEntry {
    return new LsEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LsEntry {
    return new LsEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LsEntry {
    return new LsEntry().fromJsonString(jsonString, options);
  }

  static equals(a: LsEntry | PlainMessage<LsEntry> | undefined, b: LsEntry | PlainMessage<LsEntry> | undefined): boolean {
    return proto3.util.equals(LsEntry, a, b);
  }
}

/**
 * @generated from message v1.RunCommandRequest
 */
export class RunCommandRequest extends Message<RunCommandRequest> {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId = "";

  /**
   * @generated from field: string command = 2;
   */
  command = "";

  constructor(data?: PartialMessage<RunCommandRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RunCommandRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "command", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunCommandRequest {
    return new RunCommandRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunCommandRequest {
    return new RunCommandRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunCommandRequest {
    return new RunCommandRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RunCommandRequest | PlainMessage<RunCommandRequest> | undefined, b: RunCommandRequest | PlainMessage<RunCommandRequest> | undefined): boolean {
    return proto3.util.equals(RunCommandRequest, a, b);
  }
}

/**
 * @generated from message v1.SummaryDashboardResponse
 */
export class SummaryDashboardResponse extends Message<SummaryDashboardResponse> {
  /**
   * @generated from field: repeated v1.SummaryDashboardResponse.Summary repo_summaries = 1;
   */
  repoSummaries: SummaryDashboardResponse_Summary[] = [];

  /**
   * @generated from field: repeated v1.SummaryDashboardResponse.Summary plan_summaries = 2;
   */
  planSummaries: SummaryDashboardResponse_Summary[] = [];

  /**
   * @generated from field: string config_path = 10;
   */
  configPath = "";

  /**
   * @generated from field: string data_path = 11;
   */
  dataPath = "";

  constructor(data?: PartialMessage<SummaryDashboardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.SummaryDashboardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "repo_summaries", kind: "message", T: SummaryDashboardResponse_Summary, repeated: true },
    { no: 2, name: "plan_summaries", kind: "message", T: SummaryDashboardResponse_Summary, repeated: true },
    { no: 10, name: "config_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "data_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SummaryDashboardResponse {
    return new SummaryDashboardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SummaryDashboardResponse {
    return new SummaryDashboardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SummaryDashboardResponse {
    return new SummaryDashboardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SummaryDashboardResponse | PlainMessage<SummaryDashboardResponse> | undefined, b: SummaryDashboardResponse | PlainMessage<SummaryDashboardResponse> | undefined): boolean {
    return proto3.util.equals(SummaryDashboardResponse, a, b);
  }
}

/**
 * @generated from message v1.SummaryDashboardResponse.Summary
 */
export class SummaryDashboardResponse_Summary extends Message<SummaryDashboardResponse_Summary> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: int64 backups_failed_30days = 2;
   */
  backupsFailed30days = protoInt64.zero;

  /**
   * @generated from field: int64 backups_warning_last_30days = 3;
   */
  backupsWarningLast30days = protoInt64.zero;

  /**
   * @generated from field: int64 backups_success_last_30days = 4;
   */
  backupsSuccessLast30days = protoInt64.zero;

  /**
   * @generated from field: int64 bytes_scanned_last_30days = 5;
   */
  bytesScannedLast30days = protoInt64.zero;

  /**
   * @generated from field: int64 bytes_added_last_30days = 6;
   */
  bytesAddedLast30days = protoInt64.zero;

  /**
   * @generated from field: int64 total_snapshots = 7;
   */
  totalSnapshots = protoInt64.zero;

  /**
   * @generated from field: int64 bytes_scanned_avg = 8;
   */
  bytesScannedAvg = protoInt64.zero;

  /**
   * @generated from field: int64 bytes_added_avg = 9;
   */
  bytesAddedAvg = protoInt64.zero;

  /**
   * @generated from field: int64 next_backup_time_ms = 10;
   */
  nextBackupTimeMs = protoInt64.zero;

  /**
   * Charts
   *
   * recent backups
   *
   * @generated from field: v1.SummaryDashboardResponse.BackupChart recent_backups = 11;
   */
  recentBackups?: SummaryDashboardResponse_BackupChart;

  constructor(data?: PartialMessage<SummaryDashboardResponse_Summary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.SummaryDashboardResponse.Summary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "backups_failed_30days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "backups_warning_last_30days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "backups_success_last_30days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "bytes_scanned_last_30days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "bytes_added_last_30days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "total_snapshots", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "bytes_scanned_avg", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "bytes_added_avg", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "next_backup_time_ms", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "recent_backups", kind: "message", T: SummaryDashboardResponse_BackupChart },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SummaryDashboardResponse_Summary {
    return new SummaryDashboardResponse_Summary().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SummaryDashboardResponse_Summary {
    return new SummaryDashboardResponse_Summary().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SummaryDashboardResponse_Summary {
    return new SummaryDashboardResponse_Summary().fromJsonString(jsonString, options);
  }

  static equals(a: SummaryDashboardResponse_Summary | PlainMessage<SummaryDashboardResponse_Summary> | undefined, b: SummaryDashboardResponse_Summary | PlainMessage<SummaryDashboardResponse_Summary> | undefined): boolean {
    return proto3.util.equals(SummaryDashboardResponse_Summary, a, b);
  }
}

/**
 * @generated from message v1.SummaryDashboardResponse.BackupChart
 */
export class SummaryDashboardResponse_BackupChart extends Message<SummaryDashboardResponse_BackupChart> {
  /**
   * @generated from field: repeated int64 flow_id = 1;
   */
  flowId: bigint[] = [];

  /**
   * @generated from field: repeated int64 timestamp_ms = 2;
   */
  timestampMs: bigint[] = [];

  /**
   * @generated from field: repeated int64 duration_ms = 3;
   */
  durationMs: bigint[] = [];

  /**
   * @generated from field: repeated v1.OperationStatus status = 4;
   */
  status: OperationStatus[] = [];

  /**
   * @generated from field: repeated int64 bytes_added = 5;
   */
  bytesAdded: bigint[] = [];

  constructor(data?: PartialMessage<SummaryDashboardResponse_BackupChart>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.SummaryDashboardResponse.BackupChart";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "flow_id", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 2, name: "timestamp_ms", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 3, name: "duration_ms", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(OperationStatus), repeated: true },
    { no: 5, name: "bytes_added", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SummaryDashboardResponse_BackupChart {
    return new SummaryDashboardResponse_BackupChart().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SummaryDashboardResponse_BackupChart {
    return new SummaryDashboardResponse_BackupChart().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SummaryDashboardResponse_BackupChart {
    return new SummaryDashboardResponse_BackupChart().fromJsonString(jsonString, options);
  }

  static equals(a: SummaryDashboardResponse_BackupChart | PlainMessage<SummaryDashboardResponse_BackupChart> | undefined, b: SummaryDashboardResponse_BackupChart | PlainMessage<SummaryDashboardResponse_BackupChart> | undefined): boolean {
    return proto3.util.equals(SummaryDashboardResponse_BackupChart, a, b);
  }
}

