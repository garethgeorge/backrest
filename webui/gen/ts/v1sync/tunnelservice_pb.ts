// @generated by protoc-gen-es v2.10.0 with parameter "target=ts"
// @generated from file v1sync/tunnelservice.proto (package v1sync, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_v1_config } from "../v1/config_pb";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1sync/tunnelservice.proto.
 */
export const file_v1sync_tunnelservice: GenFile = /*@__PURE__*/
  fileDesc("Chp2MXN5bmMvdHVubmVsc2VydmljZS5wcm90bxIGdjFzeW5jIp8BCg1UdW5uZWxNZXNzYWdlEg8KB2Nvbm5faWQYASABKAMSDQoFc2Vxbm8YAiABKAMSDAoEZGF0YRgDIAEoDBINCgVjbG9zZRgEIAEoCBIRCgllbmNyeXB0ZWQYBSABKAwSGgoScHVia2V5X2VjZGhfeDI1NTE5GGQgASgMEiIKA2FueRjoByABKAsyFC5nb29nbGUucHJvdG9idWYuQW55Mk0KDVR1bm5lbFNlcnZpY2USPAoGVHVubmVsEhUudjFzeW5jLlR1bm5lbE1lc3NhZ2UaFS52MXN5bmMuVHVubmVsTWVzc2FnZSIAKAEwAUIwWi5naXRodWIuY29tL2dhcmV0aGdlb3JnZS9iYWNrcmVzdC9nZW4vZ28vdjFzeW5jYgZwcm90bzM", [file_v1_config, file_google_protobuf_any]);

/**
 * @generated from message v1sync.TunnelMessage
 */
export type TunnelMessage = Message<"v1sync.TunnelMessage"> & {
  /**
   * The connection ID this request belongs to, enables multiplexing.
   *
   * @generated from field: int64 conn_id = 1;
   */
  connId: bigint;

  /**
   * @generated from field: int64 seqno = 2;
   */
  seqno: bigint;

  /**
   * The data to send, this is a raw byte stream.
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;

  /**
   * If true, the write end should be closed after this request.
   *
   * @generated from field: bool close = 4;
   */
  close: boolean;

  /**
   * Encrypted data, if the connection is encrypted.
   *
   * @generated from field: bytes encrypted = 5;
   */
  encrypted: Uint8Array;

  /**
   * The public key used for ECDH key exchange, binary encoded.
   *
   * @generated from field: bytes pubkey_ecdh_x25519 = 100;
   */
  pubkeyEcdhX25519: Uint8Array;

  /**
   * Available to allow sending custom data down the tunnel in the initial handshake.
   *
   * @generated from field: google.protobuf.Any any = 1000;
   */
  any?: Any;
};

/**
 * Describes the message v1sync.TunnelMessage.
 * Use `create(TunnelMessageSchema)` to create a new message.
 */
export const TunnelMessageSchema: GenMessage<TunnelMessage> = /*@__PURE__*/
  messageDesc(file_v1sync_tunnelservice, 0);

/**
 * TunnelService allows inverted communicatons from server to client where the server can initiate requests to the client.
 *
 * @generated from service v1sync.TunnelService
 */
export const TunnelService: GenService<{
  /**
   * @generated from rpc v1sync.TunnelService.Tunnel
   */
  tunnel: {
    methodKind: "bidi_streaming";
    input: typeof TunnelMessageSchema;
    output: typeof TunnelMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1sync_tunnelservice, 0);

