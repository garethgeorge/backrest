// @generated by protoc-gen-es v2.10.0 with parameter "target=ts"
// @generated from file v1sync/syncservice.proto (package v1sync, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Plan, Repo } from "../v1/config_pb";
import { file_v1_config } from "../v1/config_pb";
import type { PublicKey, SignedMessage } from "../v1/crypto_pb";
import { file_v1_crypto } from "../v1/crypto_pb";
import { file_v1_restic } from "../v1/restic_pb";
import { file_v1_service } from "../v1/service_pb";
import type { OperationEvent } from "../v1/operations_pb";
import { file_v1_operations } from "../v1/operations_pb";
import { file_types_value } from "../types/value_pb";
import { file_google_protobuf_any, file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import { file_google_api_annotations } from "../google/api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1sync/syncservice.proto.
 */
export const file_v1sync_syncservice: GenFile = /*@__PURE__*/
  fileDesc("Chh2MXN5bmMvc3luY3NlcnZpY2UucHJvdG8SBnYxc3luYyIrChZTeW5jU3RhdGVTdHJlYW1SZXF1ZXN0EhEKCXN1YnNjcmliZRgBIAEoCCKbAgoJUGVlclN0YXRlEhgKEHBlZXJfaW5zdGFuY2VfaWQYASABKAkSEgoKcGVlcl9rZXlpZBgCIAEoCRImCgVzdGF0ZRgDIAEoDjIXLnYxc3luYy5Db25uZWN0aW9uU3RhdGUSFgoOc3RhdHVzX21lc3NhZ2UYBCABKAkSKQoLa25vd25fcGxhbnMYBSADKAsyFC52MXN5bmMuUGxhbk1ldGFkYXRhEikKC2tub3duX3JlcG9zGAYgAygLMhQudjFzeW5jLlJlcG9NZXRhZGF0YRIrCg1yZW1vdGVfY29uZmlnGAcgASgLMhQudjFzeW5jLlJlbW90ZUNvbmZpZxIdChVsYXN0X2hlYXJ0YmVhdF9taWxsaXMYCCABKAMiPQoTQXV0aGVudGljYXRlUmVxdWVzdBImCgtpbnN0YW5jZV9pZBgBIAEoCzIRLnYxLlNpZ25lZE1lc3NhZ2UiPgocR2V0T3BlcmF0aW9uTWV0YWRhdGFSZXNwb25zZRIOCgZvcF9pZHMYASADKAMSDgoGbW9kbm9zGAIgAygDIl0KDExvZ0RhdGFFbnRyeRIOCgZsb2dfaWQYASABKAkSEgoKb3duZXJfb3BpZBgCIAEoAxIaChJleHBpcmF0aW9uX3RzX3VuaXgYAyABKAMSDQoFY2h1bmsYBCABKAwiaAocU2V0QXZhaWxhYmxlUmVzb3VyY2VzUmVxdWVzdBIjCgVyZXBvcxgBIAMoCzIULnYxc3luYy5QbGFuTWV0YWRhdGESIwoFcGxhbnMYAiADKAsyFC52MXN5bmMuUmVwb01ldGFkYXRhIigKDFJlcG9NZXRhZGF0YRIKCgJpZBgBIAEoCRIMCgRndWlkGAIgASgJIhoKDFBsYW5NZXRhZGF0YRIKCgJpZBgBIAEoCSJ2ChBTZXRDb25maWdSZXF1ZXN0EhcKBXBsYW5zGAEgAygLMggudjEuUGxhbhIXCgVyZXBvcxgCIAMoCzIILnYxLlJlcG8SFwoPcmVwb3NfdG9fZGVsZXRlGAMgAygJEhcKD3BsYW5zX3RvX2RlbGV0ZRgEIAMoCSJgCgxSZW1vdGVDb25maWcSDQoFbW9kbm8YASABKAUSDwoHdmVyc2lvbhgCIAEoBRIXCgVyZXBvcxgDIAMoCzIILnYxLlJlcG8SFwoFcGxhbnMYBCADKAsyCC52MS5QbGFuIl8KEkF1dGhvcml6YXRpb25Ub2tlbhIhCgpwdWJsaWNfa2V5GAEgASgLMg0udjEuUHVibGljS2V5EiYKC2luc3RhbmNlX2lkGAIgASgLMhEudjEuU2lnbmVkTWVzc2FnZSK1DwoOU3luY1N0cmVhbUl0ZW0SKwoOc2lnbmVkX21lc3NhZ2UYASABKAsyES52MS5TaWduZWRNZXNzYWdlSAASPwoJaGFuZHNoYWtlGAMgASgLMioudjFzeW5jLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25IYW5kc2hha2VIABI/CgloZWFydGJlYXQYBCABKAsyKi52MXN5bmMuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvbkhlYXJ0YmVhdEgAElAKEnJlcXVlc3Rfb3BlcmF0aW9ucxgUIAEoCzIyLnYxc3luYy5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uUmVxdWVzdE9wZXJhdGlvbnNIABJQChJyZWNlaXZlX29wZXJhdGlvbnMYFSABKAsyMi52MXN5bmMuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvblJlY2VpdmVPcGVyYXRpb25zSAASSAoOcmVjZWl2ZV9jb25maWcYFiABKAsyLi52MXN5bmMuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvblJlY2VpdmVDb25maWdIABJACgpzZXRfY29uZmlnGBggASgLMioudjFzeW5jLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25TZXRDb25maWdIABJOChFyZXF1ZXN0X3Jlc291cmNlcxgZIAEoCzIxLnYxc3luYy5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uUmVxdWVzdFJlc291cmNlc0gAEk4KEXJlY2VpdmVfcmVzb3VyY2VzGBogASgLMjEudjFzeW5jLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25SZWNlaXZlUmVzb3VyY2VzSAASQgoLcmVxdWVzdF9sb2cYHiABKAsyKy52MXN5bmMuU3luY1N0cmVhbUl0ZW0uU3luY0FjdGlvblJlcXVlc3RMb2dIABJLChByZWNlaXZlX2xvZ19kYXRhGB8gASgLMi8udjFzeW5jLlN5bmNTdHJlYW1JdGVtLlN5bmNBY3Rpb25SZWNlaXZlTG9nRGF0YUgAEj4KCHRocm90dGxlGOgHIAEoCzIpLnYxc3luYy5TeW5jU3RyZWFtSXRlbS5TeW5jQWN0aW9uVGhyb3R0bGVIABp6ChNTeW5jQWN0aW9uSGFuZHNoYWtlEhgKEHByb3RvY29sX3ZlcnNpb24YASABKAMSIQoKcHVibGljX2tleRgCIAEoCzINLnYxLlB1YmxpY0tleRImCgtpbnN0YW5jZV9pZBgDIAEoCzIRLnYxLlNpZ25lZE1lc3NhZ2UaFQoTU3luY0FjdGlvbkhlYXJ0YmVhdBo/ChdTeW5jQWN0aW9uUmVjZWl2ZUNvbmZpZxIkCgZjb25maWcYASABKAsyFC52MXN5bmMuUmVtb3RlQ29uZmlnGnkKE1N5bmNBY3Rpb25TZXRDb25maWcSFwoFcmVwb3MYASADKAsyCC52MS5SZXBvEhcKBXBsYW5zGAIgAygLMggudjEuUGxhbhIXCg9yZXBvc190b19kZWxldGUYAyADKAkSFwoPcGxhbnNfdG9fZGVsZXRlGAQgAygJGhwKGlN5bmNBY3Rpb25SZXF1ZXN0UmVzb3VyY2VzGmYKGlN5bmNBY3Rpb25SZWNlaXZlUmVzb3VyY2VzEiMKBXJlcG9zGAEgAygLMhQudjFzeW5jLlJlcG9NZXRhZGF0YRIjCgVwbGFucxgCIAMoCzIULnYxc3luYy5QbGFuTWV0YWRhdGEaKAoVU3luY0FjdGlvbkNvbm5lY3RSZXBvEg8KB3JlcG9faWQYASABKAkaRAobU3luY0FjdGlvblJlcXVlc3RPcGVyYXRpb25zEhEKCWhpZ2hfb3BpZBgBIAEoAxISCgpoaWdoX21vZG5vGAIgASgDGkAKG1N5bmNBY3Rpb25SZWNlaXZlT3BlcmF0aW9ucxIhCgVldmVudBgBIAEoCzISLnYxLk9wZXJhdGlvbkV2ZW50GiYKFFN5bmNBY3Rpb25SZXF1ZXN0TG9nEg4KBmxvZ19pZBgBIAEoCRqAAQoYU3luY0FjdGlvblJlY2VpdmVMb2dEYXRhEg4KBmxvZ19pZBgBIAEoCRISCgpvd25lcl9vcGlkGAIgASgDEhoKEmV4cGlyYXRpb25fdHNfdW5peBgDIAEoAxINCgVjaHVuaxgEIAEoDBIVCg1lcnJvcl9tZXNzYWdlGAUgASgJGiYKElN5bmNBY3Rpb25UaHJvdHRsZRIQCghkZWxheV9tcxgBIAEoAxo4ChlTeW5jRXN0YWJsaXNoU2hhcmVkU2VjcmV0EhsKB2VkMjU1MTkYAiABKAlSCmVkMjU1MTlwdWIitAEKE1JlcG9Db25uZWN0aW9uU3RhdGUSHAoYQ09OTkVDVElPTl9TVEFURV9VTktOT1dOEAASHAoYQ09OTkVDVElPTl9TVEFURV9QRU5ESU5HEAESHgoaQ09OTkVDVElPTl9TVEFURV9DT05ORUNURUQQAhIhCh1DT05ORUNUSU9OX1NUQVRFX1VOQVVUSE9SSVpFRBADEh4KGkNPTk5FQ1RJT05fU1RBVEVfTk9UX0ZPVU5EEARCCAoGYWN0aW9uKpwCCg9Db25uZWN0aW9uU3RhdGUSHAoYQ09OTkVDVElPTl9TVEFURV9VTktOT1dOEAASHAoYQ09OTkVDVElPTl9TVEFURV9QRU5ESU5HEAESHgoaQ09OTkVDVElPTl9TVEFURV9DT05ORUNURUQQAhIhCh1DT05ORUNUSU9OX1NUQVRFX0RJU0NPTk5FQ1RFRBADEh8KG0NPTk5FQ1RJT05fU1RBVEVfUkVUUllfV0FJVBAEEh8KG0NPTk5FQ1RJT05fU1RBVEVfRVJST1JfQVVUSBAKEiMKH0NPTk5FQ1RJT05fU1RBVEVfRVJST1JfUFJPVE9DT0wQCxIjCh9DT05ORUNUSU9OX1NUQVRFX0VSUk9SX0lOVEVSTkFMEAwyUwoTQmFja3Jlc3RTeW5jU2VydmljZRI8CgRTeW5jEhYudjFzeW5jLlN5bmNTdHJlYW1JdGVtGhYudjFzeW5jLlN5bmNTdHJlYW1JdGVtIgAoATABMmwKGEJhY2tyZXN0U3luY1N0YXRlU2VydmljZRJQChdHZXRQZWVyU3luY1N0YXRlc1N0cmVhbRIeLnYxc3luYy5TeW5jU3RhdGVTdHJlYW1SZXF1ZXN0GhEudjFzeW5jLlBlZXJTdGF0ZSIAMAFCMFouZ2l0aHViLmNvbS9nYXJldGhnZW9yZ2UvYmFja3Jlc3QvZ2VuL2dvL3Yxc3luY2IGcHJvdG8z", [file_v1_config, file_v1_crypto, file_v1_restic, file_v1_service, file_v1_operations, file_types_value, file_google_protobuf_empty, file_google_api_annotations, file_google_protobuf_any]);

/**
 * @generated from message v1sync.SyncStateStreamRequest
 */
export type SyncStateStreamRequest = Message<"v1sync.SyncStateStreamRequest"> & {
  /**
   * If true, the stream will continue to send updates until cancelled.
   *
   * @generated from field: bool subscribe = 1;
   */
  subscribe: boolean;
};

/**
 * Describes the message v1sync.SyncStateStreamRequest.
 * Use `create(SyncStateStreamRequestSchema)` to create a new message.
 */
export const SyncStateStreamRequestSchema: GenMessage<SyncStateStreamRequest> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 0);

/**
 * @generated from message v1sync.PeerState
 */
export type PeerState = Message<"v1sync.PeerState"> & {
  /**
   * @generated from field: string peer_instance_id = 1;
   */
  peerInstanceId: string;

  /**
   * @generated from field: string peer_keyid = 2;
   */
  peerKeyid: string;

  /**
   * @generated from field: v1sync.ConnectionState state = 3;
   */
  state: ConnectionState;

  /**
   * @generated from field: string status_message = 4;
   */
  statusMessage: string;

  /**
   * List of plan IDs that the peer has.
   *
   * @generated from field: repeated v1sync.PlanMetadata known_plans = 5;
   */
  knownPlans: PlanMetadata[];

  /**
   * List of repo IDs that the peer has.
   *
   * @generated from field: repeated v1sync.RepoMetadata known_repos = 6;
   */
  knownRepos: RepoMetadata[];

  /**
   * The remote config of the peer, if available.
   *
   * @generated from field: v1sync.RemoteConfig remote_config = 7;
   */
  remoteConfig?: RemoteConfig;

  /**
   * The last time the peer sent a heartbeat, in milliseconds since epoch.
   *
   * @generated from field: int64 last_heartbeat_millis = 8;
   */
  lastHeartbeatMillis: bigint;
};

/**
 * Describes the message v1sync.PeerState.
 * Use `create(PeerStateSchema)` to create a new message.
 */
export const PeerStateSchema: GenMessage<PeerState> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 1);

/**
 * @generated from message v1sync.AuthenticateRequest
 */
export type AuthenticateRequest = Message<"v1sync.AuthenticateRequest"> & {
  /**
   * The ID of the peer instance.
   *
   * @generated from field: v1.SignedMessage instance_id = 1;
   */
  instanceId?: SignedMessage;
};

/**
 * Describes the message v1sync.AuthenticateRequest.
 * Use `create(AuthenticateRequestSchema)` to create a new message.
 */
export const AuthenticateRequestSchema: GenMessage<AuthenticateRequest> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 2);

/**
 * @generated from message v1sync.GetOperationMetadataResponse
 */
export type GetOperationMetadataResponse = Message<"v1sync.GetOperationMetadataResponse"> & {
  /**
   * The IDs of the operations.
   *
   * @generated from field: repeated int64 op_ids = 1;
   */
  opIds: bigint[];

  /**
   * The modnos of the operations.
   *
   * @generated from field: repeated int64 modnos = 2;
   */
  modnos: bigint[];
};

/**
 * Describes the message v1sync.GetOperationMetadataResponse.
 * Use `create(GetOperationMetadataResponseSchema)` to create a new message.
 */
export const GetOperationMetadataResponseSchema: GenMessage<GetOperationMetadataResponse> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 3);

/**
 * @generated from message v1sync.LogDataEntry
 */
export type LogDataEntry = Message<"v1sync.LogDataEntry"> & {
  /**
   * The ID of the log, only used for the first message in a log data stream.
   *
   * @generated from field: string log_id = 1;
   */
  logId: string;

  /**
   * The operation ID of the operation that owns this log data.
   *
   * @generated from field: int64 owner_opid = 2;
   */
  ownerOpid: bigint;

  /**
   * Unix timestamp in seconds when the log data expires.
   *
   * @generated from field: int64 expiration_ts_unix = 3;
   */
  expirationTsUnix: bigint;

  /**
   * The log data chunk, can be sent repeatedly, must be terminated by a packet with size = 0.
   *
   * @generated from field: bytes chunk = 4;
   */
  chunk: Uint8Array;
};

/**
 * Describes the message v1sync.LogDataEntry.
 * Use `create(LogDataEntrySchema)` to create a new message.
 */
export const LogDataEntrySchema: GenMessage<LogDataEntry> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 4);

/**
 * @generated from message v1sync.SetAvailableResourcesRequest
 */
export type SetAvailableResourcesRequest = Message<"v1sync.SetAvailableResourcesRequest"> & {
  /**
   * The repos that are available.
   *
   * @generated from field: repeated v1sync.PlanMetadata repos = 1;
   */
  repos: PlanMetadata[];

  /**
   * The plans that are available.
   *
   * @generated from field: repeated v1sync.RepoMetadata plans = 2;
   */
  plans: RepoMetadata[];
};

/**
 * Describes the message v1sync.SetAvailableResourcesRequest.
 * Use `create(SetAvailableResourcesRequestSchema)` to create a new message.
 */
export const SetAvailableResourcesRequestSchema: GenMessage<SetAvailableResourcesRequest> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 5);

/**
 * @generated from message v1sync.RepoMetadata
 */
export type RepoMetadata = Message<"v1sync.RepoMetadata"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string guid = 2;
   */
  guid: string;
};

/**
 * Describes the message v1sync.RepoMetadata.
 * Use `create(RepoMetadataSchema)` to create a new message.
 */
export const RepoMetadataSchema: GenMessage<RepoMetadata> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 6);

/**
 * @generated from message v1sync.PlanMetadata
 */
export type PlanMetadata = Message<"v1sync.PlanMetadata"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message v1sync.PlanMetadata.
 * Use `create(PlanMetadataSchema)` to create a new message.
 */
export const PlanMetadataSchema: GenMessage<PlanMetadata> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 7);

/**
 * @generated from message v1sync.SetConfigRequest
 */
export type SetConfigRequest = Message<"v1sync.SetConfigRequest"> & {
  /**
   * The plans to set.
   *
   * @generated from field: repeated v1.Plan plans = 1;
   */
  plans: Plan[];

  /**
   * The repos to set.
   *
   * @generated from field: repeated v1.Repo repos = 2;
   */
  repos: Repo[];

  /**
   * The repo IDs to delete.
   *
   * @generated from field: repeated string repos_to_delete = 3;
   */
  reposToDelete: string[];

  /**
   * The plan IDs to delete.
   *
   * @generated from field: repeated string plans_to_delete = 4;
   */
  plansToDelete: string[];
};

/**
 * Describes the message v1sync.SetConfigRequest.
 * Use `create(SetConfigRequestSchema)` to create a new message.
 */
export const SetConfigRequestSchema: GenMessage<SetConfigRequest> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 8);

/**
 * @generated from message v1sync.RemoteConfig
 */
export type RemoteConfig = Message<"v1sync.RemoteConfig"> & {
  /**
   * The modno of the config.
   *
   * @generated from field: int32 modno = 1;
   */
  modno: number;

  /**
   * The storage version of the config.
   *
   * @generated from field: int32 version = 2;
   */
  version: number;

  /**
   * @generated from field: repeated v1.Repo repos = 3;
   */
  repos: Repo[];

  /**
   * @generated from field: repeated v1.Plan plans = 4;
   */
  plans: Plan[];
};

/**
 * Describes the message v1sync.RemoteConfig.
 * Use `create(RemoteConfigSchema)` to create a new message.
 */
export const RemoteConfigSchema: GenMessage<RemoteConfig> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 9);

/**
 * @generated from message v1sync.AuthorizationToken
 */
export type AuthorizationToken = Message<"v1sync.AuthorizationToken"> & {
  /**
   * @generated from field: v1.PublicKey public_key = 1;
   */
  publicKey?: PublicKey;

  /**
   * The ID of the peer instance.
   *
   * @generated from field: v1.SignedMessage instance_id = 2;
   */
  instanceId?: SignedMessage;
};

/**
 * Describes the message v1sync.AuthorizationToken.
 * Use `create(AuthorizationTokenSchema)` to create a new message.
 */
export const AuthorizationTokenSchema: GenMessage<AuthorizationToken> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 10);

/**
 * @generated from message v1sync.SyncStreamItem
 */
export type SyncStreamItem = Message<"v1sync.SyncStreamItem"> & {
  /**
   * @generated from oneof v1sync.SyncStreamItem.action
   */
  action: {
    /**
     * @generated from field: v1.SignedMessage signed_message = 1;
     */
    value: SignedMessage;
    case: "signedMessage";
  } | {
    /**
     * note: mostly deprecated, sent through headers rather than stream.
     *
     * @generated from field: v1sync.SyncStreamItem.SyncActionHandshake handshake = 3;
     */
    value: SyncStreamItem_SyncActionHandshake;
    case: "handshake";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionHeartbeat heartbeat = 4;
     */
    value: SyncStreamItem_SyncActionHeartbeat;
    case: "heartbeat";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionRequestOperations request_operations = 20;
     */
    value: SyncStreamItem_SyncActionRequestOperations;
    case: "requestOperations";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionReceiveOperations receive_operations = 21;
     */
    value: SyncStreamItem_SyncActionReceiveOperations;
    case: "receiveOperations";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionReceiveConfig receive_config = 22;
     */
    value: SyncStreamItem_SyncActionReceiveConfig;
    case: "receiveConfig";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionSetConfig set_config = 24;
     */
    value: SyncStreamItem_SyncActionSetConfig;
    case: "setConfig";
  } | {
    /**
     * request a list of available resources. Only used by the server.
     *
     * @generated from field: v1sync.SyncStreamItem.SyncActionRequestResources request_resources = 25;
     */
    value: SyncStreamItem_SyncActionRequestResources;
    case: "requestResources";
  } | {
    /**
     * receiving a list of available resources.
     *
     * @generated from field: v1sync.SyncStreamItem.SyncActionReceiveResources receive_resources = 26;
     */
    value: SyncStreamItem_SyncActionReceiveResources;
    case: "receiveResources";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionRequestLog request_log = 30;
     */
    value: SyncStreamItem_SyncActionRequestLog;
    case: "requestLog";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionReceiveLogData receive_log_data = 31;
     */
    value: SyncStreamItem_SyncActionReceiveLogData;
    case: "receiveLogData";
  } | {
    /**
     * @generated from field: v1sync.SyncStreamItem.SyncActionThrottle throttle = 1000;
     */
    value: SyncStreamItem_SyncActionThrottle;
    case: "throttle";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message v1sync.SyncStreamItem.
 * Use `create(SyncStreamItemSchema)` to create a new message.
 */
export const SyncStreamItemSchema: GenMessage<SyncStreamItem> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionHandshake
 */
export type SyncStreamItem_SyncActionHandshake = Message<"v1sync.SyncStreamItem.SyncActionHandshake"> & {
  /**
   * @generated from field: int64 protocol_version = 1;
   */
  protocolVersion: bigint;

  /**
   * @generated from field: v1.PublicKey public_key = 2;
   */
  publicKey?: PublicKey;

  /**
   * @generated from field: v1.SignedMessage instance_id = 3;
   */
  instanceId?: SignedMessage;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionHandshake.
 * Use `create(SyncStreamItem_SyncActionHandshakeSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionHandshakeSchema: GenMessage<SyncStreamItem_SyncActionHandshake> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 0);

/**
 * SyncActionHeartbeat is sent periodically to keep the connection alive.
 *
 * @generated from message v1sync.SyncStreamItem.SyncActionHeartbeat
 */
export type SyncStreamItem_SyncActionHeartbeat = Message<"v1sync.SyncStreamItem.SyncActionHeartbeat"> & {
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionHeartbeat.
 * Use `create(SyncStreamItem_SyncActionHeartbeatSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionHeartbeatSchema: GenMessage<SyncStreamItem_SyncActionHeartbeat> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 1);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionReceiveConfig
 */
export type SyncStreamItem_SyncActionReceiveConfig = Message<"v1sync.SyncStreamItem.SyncActionReceiveConfig"> & {
  /**
   * @generated from field: v1sync.RemoteConfig config = 1;
   */
  config?: RemoteConfig;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionReceiveConfig.
 * Use `create(SyncStreamItem_SyncActionReceiveConfigSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionReceiveConfigSchema: GenMessage<SyncStreamItem_SyncActionReceiveConfig> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 2);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionSetConfig
 */
export type SyncStreamItem_SyncActionSetConfig = Message<"v1sync.SyncStreamItem.SyncActionSetConfig"> & {
  /**
   * @generated from field: repeated v1.Repo repos = 1;
   */
  repos: Repo[];

  /**
   * @generated from field: repeated v1.Plan plans = 2;
   */
  plans: Plan[];

  /**
   * @generated from field: repeated string repos_to_delete = 3;
   */
  reposToDelete: string[];

  /**
   * @generated from field: repeated string plans_to_delete = 4;
   */
  plansToDelete: string[];
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionSetConfig.
 * Use `create(SyncStreamItem_SyncActionSetConfigSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionSetConfigSchema: GenMessage<SyncStreamItem_SyncActionSetConfig> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 3);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionRequestResources
 */
export type SyncStreamItem_SyncActionRequestResources = Message<"v1sync.SyncStreamItem.SyncActionRequestResources"> & {
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionRequestResources.
 * Use `create(SyncStreamItem_SyncActionRequestResourcesSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionRequestResourcesSchema: GenMessage<SyncStreamItem_SyncActionRequestResources> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 4);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionReceiveResources
 */
export type SyncStreamItem_SyncActionReceiveResources = Message<"v1sync.SyncStreamItem.SyncActionReceiveResources"> & {
  /**
   * @generated from field: repeated v1sync.RepoMetadata repos = 1;
   */
  repos: RepoMetadata[];

  /**
   * @generated from field: repeated v1sync.PlanMetadata plans = 2;
   */
  plans: PlanMetadata[];
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionReceiveResources.
 * Use `create(SyncStreamItem_SyncActionReceiveResourcesSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionReceiveResourcesSchema: GenMessage<SyncStreamItem_SyncActionReceiveResources> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 5);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionConnectRepo
 */
export type SyncStreamItem_SyncActionConnectRepo = Message<"v1sync.SyncStreamItem.SyncActionConnectRepo"> & {
  /**
   * @generated from field: string repo_id = 1;
   */
  repoId: string;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionConnectRepo.
 * Use `create(SyncStreamItem_SyncActionConnectRepoSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionConnectRepoSchema: GenMessage<SyncStreamItem_SyncActionConnectRepo> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 6);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionRequestOperations
 */
export type SyncStreamItem_SyncActionRequestOperations = Message<"v1sync.SyncStreamItem.SyncActionRequestOperations"> & {
  /**
   * The highest operation ID the requester has.
   *
   * @generated from field: int64 high_opid = 1;
   */
  highOpid: bigint;

  /**
   * The highest modno the requester has.
   *
   * @generated from field: int64 high_modno = 2;
   */
  highModno: bigint;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionRequestOperations.
 * Use `create(SyncStreamItem_SyncActionRequestOperationsSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionRequestOperationsSchema: GenMessage<SyncStreamItem_SyncActionRequestOperations> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 7);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionReceiveOperations
 */
export type SyncStreamItem_SyncActionReceiveOperations = Message<"v1sync.SyncStreamItem.SyncActionReceiveOperations"> & {
  /**
   * @generated from field: v1.OperationEvent event = 1;
   */
  event?: OperationEvent;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionReceiveOperations.
 * Use `create(SyncStreamItem_SyncActionReceiveOperationsSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionReceiveOperationsSchema: GenMessage<SyncStreamItem_SyncActionReceiveOperations> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 8);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionRequestLog
 */
export type SyncStreamItem_SyncActionRequestLog = Message<"v1sync.SyncStreamItem.SyncActionRequestLog"> & {
  /**
   * @generated from field: string log_id = 1;
   */
  logId: string;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionRequestLog.
 * Use `create(SyncStreamItem_SyncActionRequestLogSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionRequestLogSchema: GenMessage<SyncStreamItem_SyncActionRequestLog> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 9);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionReceiveLogData
 */
export type SyncStreamItem_SyncActionReceiveLogData = Message<"v1sync.SyncStreamItem.SyncActionReceiveLogData"> & {
  /**
   * @generated from field: string log_id = 1;
   */
  logId: string;

  /**
   * Required only for first message in a log data stream.
   *
   * The operation ID of the operation that owns this log data.
   *
   * @generated from field: int64 owner_opid = 2;
   */
  ownerOpid: bigint;

  /**
   * Unix timestamp in seconds when the log data expires.
   *
   * @generated from field: int64 expiration_ts_unix = 3;
   */
  expirationTsUnix: bigint;

  /**
   * Can be sent repeatedly, must be terminated by a packet with size = 0.
   *
   * @generated from field: bytes chunk = 4;
   */
  chunk: Uint8Array;

  /**
   * If set, indicates an error occurred while fetching the log data.
   *
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionReceiveLogData.
 * Use `create(SyncStreamItem_SyncActionReceiveLogDataSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionReceiveLogDataSchema: GenMessage<SyncStreamItem_SyncActionReceiveLogData> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 10);

/**
 * @generated from message v1sync.SyncStreamItem.SyncActionThrottle
 */
export type SyncStreamItem_SyncActionThrottle = Message<"v1sync.SyncStreamItem.SyncActionThrottle"> & {
  /**
   * @generated from field: int64 delay_ms = 1;
   */
  delayMs: bigint;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncActionThrottle.
 * Use `create(SyncStreamItem_SyncActionThrottleSchema)` to create a new message.
 */
export const SyncStreamItem_SyncActionThrottleSchema: GenMessage<SyncStreamItem_SyncActionThrottle> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 11);

/**
 * @generated from message v1sync.SyncStreamItem.SyncEstablishSharedSecret
 */
export type SyncStreamItem_SyncEstablishSharedSecret = Message<"v1sync.SyncStreamItem.SyncEstablishSharedSecret"> & {
  /**
   * a one-time-use ed25519 public key with a matching unshared private key. Used to perform a key exchange.
   * See https://pkg.go.dev/crypto/ecdh#PrivateKey.ECDH .
   *
   * base64 encoded public key
   *
   * @generated from field: string ed25519 = 2 [json_name = "ed25519pub"];
   */
  ed25519: string;
};

/**
 * Describes the message v1sync.SyncStreamItem.SyncEstablishSharedSecret.
 * Use `create(SyncStreamItem_SyncEstablishSharedSecretSchema)` to create a new message.
 */
export const SyncStreamItem_SyncEstablishSharedSecretSchema: GenMessage<SyncStreamItem_SyncEstablishSharedSecret> = /*@__PURE__*/
  messageDesc(file_v1sync_syncservice, 11, 12);

/**
 * @generated from enum v1sync.SyncStreamItem.RepoConnectionState
 */
export enum SyncStreamItem_RepoConnectionState {
  /**
   * @generated from enum value: CONNECTION_STATE_UNKNOWN = 0;
   */
  CONNECTION_STATE_UNKNOWN = 0,

  /**
   * queried, response not yet received.
   *
   * @generated from enum value: CONNECTION_STATE_PENDING = 1;
   */
  CONNECTION_STATE_PENDING = 1,

  /**
   * @generated from enum value: CONNECTION_STATE_CONNECTED = 2;
   */
  CONNECTION_STATE_CONNECTED = 2,

  /**
   * @generated from enum value: CONNECTION_STATE_UNAUTHORIZED = 3;
   */
  CONNECTION_STATE_UNAUTHORIZED = 3,

  /**
   * @generated from enum value: CONNECTION_STATE_NOT_FOUND = 4;
   */
  CONNECTION_STATE_NOT_FOUND = 4,
}

/**
 * Describes the enum v1sync.SyncStreamItem.RepoConnectionState.
 */
export const SyncStreamItem_RepoConnectionStateSchema: GenEnum<SyncStreamItem_RepoConnectionState> = /*@__PURE__*/
  enumDesc(file_v1sync_syncservice, 11, 0);

/**
 * @generated from enum v1sync.ConnectionState
 */
export enum ConnectionState {
  /**
   * @generated from enum value: CONNECTION_STATE_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: CONNECTION_STATE_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: CONNECTION_STATE_CONNECTED = 2;
   */
  CONNECTED = 2,

  /**
   * @generated from enum value: CONNECTION_STATE_DISCONNECTED = 3;
   */
  DISCONNECTED = 3,

  /**
   * @generated from enum value: CONNECTION_STATE_RETRY_WAIT = 4;
   */
  RETRY_WAIT = 4,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_AUTH = 10;
   */
  ERROR_AUTH = 10,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_PROTOCOL = 11;
   */
  ERROR_PROTOCOL = 11,

  /**
   * @generated from enum value: CONNECTION_STATE_ERROR_INTERNAL = 12;
   */
  ERROR_INTERNAL = 12,
}

/**
 * Describes the enum v1sync.ConnectionState.
 */
export const ConnectionStateSchema: GenEnum<ConnectionState> = /*@__PURE__*/
  enumDesc(file_v1sync_syncservice, 0);

/**
 * BackrestSyncService provides methods to sync data between backrest instances.
 * This service provides its own authentication and authorization.
 *
 * @generated from service v1sync.BackrestSyncService
 */
export const BackrestSyncService: GenService<{
  /**
   * @generated from rpc v1sync.BackrestSyncService.Sync
   */
  sync: {
    methodKind: "bidi_streaming";
    input: typeof SyncStreamItemSchema;
    output: typeof SyncStreamItemSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1sync_syncservice, 0);

/**
 * BackrestSyncStateService provides methods to query the sync state of known hosts and clients.
 * This service should be served behind authentication and authorization.
 *
 * @generated from service v1sync.BackrestSyncStateService
 */
export const BackrestSyncStateService: GenService<{
  /**
   * @generated from rpc v1sync.BackrestSyncStateService.GetPeerSyncStatesStream
   */
  getPeerSyncStatesStream: {
    methodKind: "server_streaming";
    input: typeof SyncStateStreamRequestSchema;
    output: typeof PeerStateSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1sync_syncservice, 1);

