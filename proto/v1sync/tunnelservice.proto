syntax = "proto3";

package v1sync;

option go_package = "github.com/garethgeorge/backrest/gen/go/v1sync";

import "v1/config.proto";
import "google/protobuf/any.proto";


// TunnelService allows inverted communicatons from server to client where the server can initiate requests to the client.
service TunnelService {
  rpc Tunnel(stream TunnelMessage) returns (stream TunnelMessage) {}
}

message TunnelMessage {
  int64 conn_id = 1; // The connection ID this request belongs to, enables multiplexing.
  int64 seqno = 2;
  bytes data = 3; // The data to send, this is a raw byte stream.
  bool close = 4; // If true, the write end should be closed after this request.

  bytes pubkey_ecdh_x25519 = 100; // The public key used for ECDH key exchange, binary encoded.

  google.protobuf.Any any = 1000; // Available to allow sending custom data down the tunnel in the initial handshake.
}
