syntax = "proto3";

package v1;

option go_package = "github.com/garethgeorge/backrest/gen/go/v1";

// Config is the top level config object for restic UI.
message Config {
  // modification number, used for read-modify-write consistency in the UI. Incremented on every write.
  int32 modno = 1 [json_name="modno"];

  // override the hostname tagged on backups. If provided it will be used in addition to tags to group backups.
  string host = 2 [json_name="host"];

  repeated Repo repos = 3 [json_name="repos"];
  repeated Plan plans = 4 [json_name="plans"];
  repeated User users = 5 [json_name="users"];
}

message Repo {
  string id = 1 [json_name="id"]; // unique but human readable ID for this repo.
  string uri = 2 [json_name="uri"]; // restic repo URI
  string password = 3 [json_name="password"]; // plaintext password
  repeated string env = 4 [json_name="env"]; // extra environment variables to set for restic.
  repeated string flags = 5 [json_name="flags"]; // extra flags set on the restic command.
  PrunePolicy prune_policy = 6 [json_name="prunePolicy"]; // policy for when to run prune.
  repeated Hook hooks = 7 [json_name="hooks"]; // hooks to run on events for this repo.
}

message Plan {
  string id = 1 [json_name="id"]; // unique but human readable ID for this plan.
  string repo = 2 [json_name="repo"]; // ID of the repo to use.
  repeated string paths = 4 [json_name="paths"]; // paths to include in the backup.
  repeated string excludes = 5 [json_name="excludes"]; // glob patterns to exclude.
  string cron = 6 [json_name="cron"]; // cron expression describing the backup schedule.
  RetentionPolicy retention = 7 [json_name="retention"]; // retention policy for snapshots.
  repeated Hook hooks = 8 [json_name="hooks"]; // hooks to run on events for this plan.
}

message RetentionPolicy {
  // max_unused_limit is used to decide when forget should be run.
  string max_unused_limit = 1 [json_name="maxUnusedLimit"]; // e.g. a percentage i.e. 25% or a number of megabytes.

  int32 keep_last_n = 2 [json_name="keepLastN"]; // keep the last n snapshots.
  int32 keep_hourly = 3 [json_name="keepHourly"]; // keep the last n hourly snapshots.
  int32 keep_daily = 4 [json_name="keepDaily"]; // keep the last n daily snapshots.
  int32 keep_weekly = 5 [json_name="keepWeekly"]; // keep the last n weekly snapshots.
  int32 keep_monthly = 6 [json_name="keepMonthly"]; // keep the last n monthly snapshots.
  int32 keep_yearly = 7 [json_name="keepYearly"]; // keep the last n yearly snapshots.
  string keep_within_duration = 8 [json_name="keepWithinDuration"]; // keep snapshots within a duration e.g. 1y2m3d4h5m6s
}

message PrunePolicy {
  int32 max_frequency_days = 1 [json_name="maxFrequencyDays"]; // max frequency of prune runs in days. If 0, prune will be run on every backup.
  int32 max_unused_percent = 100 [json_name="maxUnusedPercent"]; // max percentage of repo size that can be unused before prune is run.
  int32 max_unused_bytes = 101 [json_name="maxUnusedBytes"]; // max number of bytes that can be unused before prune is run.
}

message User {
  string name = 1;
  oneof password {
    string password_bcrypt = 2;
  }
}

message Hook {
  enum Condition {
    CONDITION_UNKNOWN = 0;
    CONDITION_ANY_ERROR = 1; // error running any operation.
    CONDITION_SNAPSHOT_START = 2; // backup started.
    CONDITION_SNAPSHOT_END = 3; // backup completed (success or fail).
    CONDITION_SNAPSHOT_ERROR = 4; // snapshot failed.
  }

  repeated Condition conditions = 1 [json_name="conditions"];

  oneof action {
    Command action_command = 100 [json_name="actionCommand"];
    Webhook action_webhook = 101 [json_name="actionWebhook"];
    Discord action_discord = 102 [json_name="actionDiscord"];
  }

  message Command {
    string command = 1 [json_name="command"];
  }

  message Webhook {
    string webhook_url = 1 [json_name="webhookUrl"];
  }

  message Discord {
    string webhook_url = 1 [json_name="webhookUrl"];
  }
}
