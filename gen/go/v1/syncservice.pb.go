// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: v1/syncservice.proto

package v1

import (
	_ "github.com/garethgeorge/backrest/gen/go/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncConnectionState int32

const (
	SyncConnectionState_CONNECTION_STATE_UNKNOWN        SyncConnectionState = 0
	SyncConnectionState_CONNECTION_STATE_PENDING        SyncConnectionState = 1
	SyncConnectionState_CONNECTION_STATE_CONNECTED      SyncConnectionState = 2
	SyncConnectionState_CONNECTION_STATE_DISCONNECTED   SyncConnectionState = 3
	SyncConnectionState_CONNECTION_STATE_RETRY_WAIT     SyncConnectionState = 4
	SyncConnectionState_CONNECTION_STATE_ERROR_AUTH     SyncConnectionState = 10
	SyncConnectionState_CONNECTION_STATE_ERROR_PROTOCOL SyncConnectionState = 11
)

// Enum value maps for SyncConnectionState.
var (
	SyncConnectionState_name = map[int32]string{
		0:  "CONNECTION_STATE_UNKNOWN",
		1:  "CONNECTION_STATE_PENDING",
		2:  "CONNECTION_STATE_CONNECTED",
		3:  "CONNECTION_STATE_DISCONNECTED",
		4:  "CONNECTION_STATE_RETRY_WAIT",
		10: "CONNECTION_STATE_ERROR_AUTH",
		11: "CONNECTION_STATE_ERROR_PROTOCOL",
	}
	SyncConnectionState_value = map[string]int32{
		"CONNECTION_STATE_UNKNOWN":        0,
		"CONNECTION_STATE_PENDING":        1,
		"CONNECTION_STATE_CONNECTED":      2,
		"CONNECTION_STATE_DISCONNECTED":   3,
		"CONNECTION_STATE_RETRY_WAIT":     4,
		"CONNECTION_STATE_ERROR_AUTH":     10,
		"CONNECTION_STATE_ERROR_PROTOCOL": 11,
	}
)

func (x SyncConnectionState) Enum() *SyncConnectionState {
	p := new(SyncConnectionState)
	*p = x
	return p
}

func (x SyncConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_syncservice_proto_enumTypes[0].Descriptor()
}

func (SyncConnectionState) Type() protoreflect.EnumType {
	return &file_v1_syncservice_proto_enumTypes[0]
}

func (x SyncConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncConnectionState.Descriptor instead.
func (SyncConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{0}
}

type SyncStreamItem_RepoConnectionState int32

const (
	SyncStreamItem_CONNECTION_STATE_UNKNOWN      SyncStreamItem_RepoConnectionState = 0
	SyncStreamItem_CONNECTION_STATE_PENDING      SyncStreamItem_RepoConnectionState = 1 // queried, response not yet received.
	SyncStreamItem_CONNECTION_STATE_CONNECTED    SyncStreamItem_RepoConnectionState = 2
	SyncStreamItem_CONNECTION_STATE_UNAUTHORIZED SyncStreamItem_RepoConnectionState = 3
	SyncStreamItem_CONNECTION_STATE_NOT_FOUND    SyncStreamItem_RepoConnectionState = 4
)

// Enum value maps for SyncStreamItem_RepoConnectionState.
var (
	SyncStreamItem_RepoConnectionState_name = map[int32]string{
		0: "CONNECTION_STATE_UNKNOWN",
		1: "CONNECTION_STATE_PENDING",
		2: "CONNECTION_STATE_CONNECTED",
		3: "CONNECTION_STATE_UNAUTHORIZED",
		4: "CONNECTION_STATE_NOT_FOUND",
	}
	SyncStreamItem_RepoConnectionState_value = map[string]int32{
		"CONNECTION_STATE_UNKNOWN":      0,
		"CONNECTION_STATE_PENDING":      1,
		"CONNECTION_STATE_CONNECTED":    2,
		"CONNECTION_STATE_UNAUTHORIZED": 3,
		"CONNECTION_STATE_NOT_FOUND":    4,
	}
)

func (x SyncStreamItem_RepoConnectionState) Enum() *SyncStreamItem_RepoConnectionState {
	p := new(SyncStreamItem_RepoConnectionState)
	*p = x
	return p
}

func (x SyncStreamItem_RepoConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncStreamItem_RepoConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_syncservice_proto_enumTypes[1].Descriptor()
}

func (SyncStreamItem_RepoConnectionState) Type() protoreflect.EnumType {
	return &file_v1_syncservice_proto_enumTypes[1]
}

func (x SyncStreamItem_RepoConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncStreamItem_RepoConnectionState.Descriptor instead.
func (SyncStreamItem_RepoConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 0}
}

type GetRemoteReposResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repos []*GetRemoteReposResponse_RemoteRepoMetadata `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *GetRemoteReposResponse) Reset() {
	*x = GetRemoteReposResponse{}
	mi := &file_v1_syncservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemoteReposResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteReposResponse) ProtoMessage() {}

func (x *GetRemoteReposResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteReposResponse.ProtoReflect.Descriptor instead.
func (*GetRemoteReposResponse) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetRemoteReposResponse) GetRepos() []*GetRemoteReposResponse_RemoteRepoMetadata {
	if x != nil {
		return x.Repos
	}
	return nil
}

type SyncStreamItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*SyncStreamItem_SignedMessage
	//	*SyncStreamItem_Handshake
	//	*SyncStreamItem_DiffOperations
	//	*SyncStreamItem_SendOperations
	//	*SyncStreamItem_SendConfig
	//	*SyncStreamItem_EstablishSharedSecret
	//	*SyncStreamItem_Throttle
	Action isSyncStreamItem_Action `protobuf_oneof:"action"`
}

func (x *SyncStreamItem) Reset() {
	*x = SyncStreamItem{}
	mi := &file_v1_syncservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem) ProtoMessage() {}

func (x *SyncStreamItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem.ProtoReflect.Descriptor instead.
func (*SyncStreamItem) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1}
}

func (m *SyncStreamItem) GetAction() isSyncStreamItem_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *SyncStreamItem) GetSignedMessage() *SignedMessage {
	if x, ok := x.GetAction().(*SyncStreamItem_SignedMessage); ok {
		return x.SignedMessage
	}
	return nil
}

func (x *SyncStreamItem) GetHandshake() *SyncStreamItem_SyncActionHandshake {
	if x, ok := x.GetAction().(*SyncStreamItem_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *SyncStreamItem) GetDiffOperations() *SyncStreamItem_SyncActionDiffOperations {
	if x, ok := x.GetAction().(*SyncStreamItem_DiffOperations); ok {
		return x.DiffOperations
	}
	return nil
}

func (x *SyncStreamItem) GetSendOperations() *SyncStreamItem_SyncActionSendOperations {
	if x, ok := x.GetAction().(*SyncStreamItem_SendOperations); ok {
		return x.SendOperations
	}
	return nil
}

func (x *SyncStreamItem) GetSendConfig() *SyncStreamItem_SyncActionSendConfig {
	if x, ok := x.GetAction().(*SyncStreamItem_SendConfig); ok {
		return x.SendConfig
	}
	return nil
}

func (x *SyncStreamItem) GetEstablishSharedSecret() *SyncStreamItem_SyncEstablishSharedSecret {
	if x, ok := x.GetAction().(*SyncStreamItem_EstablishSharedSecret); ok {
		return x.EstablishSharedSecret
	}
	return nil
}

func (x *SyncStreamItem) GetThrottle() *SyncStreamItem_SyncActionThrottle {
	if x, ok := x.GetAction().(*SyncStreamItem_Throttle); ok {
		return x.Throttle
	}
	return nil
}

type isSyncStreamItem_Action interface {
	isSyncStreamItem_Action()
}

type SyncStreamItem_SignedMessage struct {
	SignedMessage *SignedMessage `protobuf:"bytes,1,opt,name=signed_message,json=signedMessage,proto3,oneof"`
}

type SyncStreamItem_Handshake struct {
	Handshake *SyncStreamItem_SyncActionHandshake `protobuf:"bytes,3,opt,name=handshake,proto3,oneof"`
}

type SyncStreamItem_DiffOperations struct {
	DiffOperations *SyncStreamItem_SyncActionDiffOperations `protobuf:"bytes,20,opt,name=diff_operations,json=diffOperations,proto3,oneof"`
}

type SyncStreamItem_SendOperations struct {
	SendOperations *SyncStreamItem_SyncActionSendOperations `protobuf:"bytes,21,opt,name=send_operations,json=sendOperations,proto3,oneof"`
}

type SyncStreamItem_SendConfig struct {
	SendConfig *SyncStreamItem_SyncActionSendConfig `protobuf:"bytes,22,opt,name=send_config,json=sendConfig,proto3,oneof"`
}

type SyncStreamItem_EstablishSharedSecret struct {
	EstablishSharedSecret *SyncStreamItem_SyncEstablishSharedSecret `protobuf:"bytes,23,opt,name=establish_shared_secret,json=establishSharedSecret,proto3,oneof"`
}

type SyncStreamItem_Throttle struct {
	Throttle *SyncStreamItem_SyncActionThrottle `protobuf:"bytes,1000,opt,name=throttle,proto3,oneof"`
}

func (*SyncStreamItem_SignedMessage) isSyncStreamItem_Action() {}

func (*SyncStreamItem_Handshake) isSyncStreamItem_Action() {}

func (*SyncStreamItem_DiffOperations) isSyncStreamItem_Action() {}

func (*SyncStreamItem_SendOperations) isSyncStreamItem_Action() {}

func (*SyncStreamItem_SendConfig) isSyncStreamItem_Action() {}

func (*SyncStreamItem_EstablishSharedSecret) isSyncStreamItem_Action() {}

func (*SyncStreamItem_Throttle) isSyncStreamItem_Action() {}

// RemoteConfig contains shareable properties from a remote backrest instance.
type RemoteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repos []*RemoteRepo `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *RemoteConfig) Reset() {
	*x = RemoteConfig{}
	mi := &file_v1_syncservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfig) ProtoMessage() {}

func (x *RemoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfig.ProtoReflect.Descriptor instead.
func (*RemoteConfig) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{2}
}

func (x *RemoteConfig) GetRepos() []*RemoteRepo {
	if x != nil {
		return x.Repos
	}
	return nil
}

type RemoteRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Guid     string   `protobuf:"bytes,11,opt,name=guid,proto3" json:"guid,omitempty"`
	Uri      string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Env      []string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	Flags    []string `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *RemoteRepo) Reset() {
	*x = RemoteRepo{}
	mi := &file_v1_syncservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteRepo) ProtoMessage() {}

func (x *RemoteRepo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteRepo.ProtoReflect.Descriptor instead.
func (*RemoteRepo) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{3}
}

func (x *RemoteRepo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoteRepo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RemoteRepo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RemoteRepo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RemoteRepo) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RemoteRepo) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type GetRemoteReposResponse_RemoteRepoMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	RepoId     string `protobuf:"bytes,2,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
}

func (x *GetRemoteReposResponse_RemoteRepoMetadata) Reset() {
	*x = GetRemoteReposResponse_RemoteRepoMetadata{}
	mi := &file_v1_syncservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemoteReposResponse_RemoteRepoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteReposResponse_RemoteRepoMetadata) ProtoMessage() {}

func (x *GetRemoteReposResponse_RemoteRepoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteReposResponse_RemoteRepoMetadata.ProtoReflect.Descriptor instead.
func (*GetRemoteReposResponse_RemoteRepoMetadata) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetRemoteReposResponse_RemoteRepoMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetRemoteReposResponse_RemoteRepoMetadata) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

type SyncStreamItem_SyncActionHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion int64          `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	PublicKey       *PublicKey     `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	InstanceId      *SignedMessage `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *SyncStreamItem_SyncActionHandshake) Reset() {
	*x = SyncStreamItem_SyncActionHandshake{}
	mi := &file_v1_syncservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionHandshake) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionHandshake.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionHandshake) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SyncStreamItem_SyncActionHandshake) GetProtocolVersion() int64 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *SyncStreamItem_SyncActionHandshake) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SyncStreamItem_SyncActionHandshake) GetInstanceId() *SignedMessage {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

type SyncStreamItem_SyncActionSendConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *RemoteConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SyncStreamItem_SyncActionSendConfig) Reset() {
	*x = SyncStreamItem_SyncActionSendConfig{}
	mi := &file_v1_syncservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionSendConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionSendConfig) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionSendConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionSendConfig.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionSendConfig) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SyncStreamItem_SyncActionSendConfig) GetConfig() *RemoteConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SyncStreamItem_SyncActionConnectRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId string `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
}

func (x *SyncStreamItem_SyncActionConnectRepo) Reset() {
	*x = SyncStreamItem_SyncActionConnectRepo{}
	mi := &file_v1_syncservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionConnectRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionConnectRepo) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionConnectRepo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionConnectRepo.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionConnectRepo) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 2}
}

func (x *SyncStreamItem_SyncActionConnectRepo) GetRepoId() string {
	if x != nil {
		return x.RepoId
	}
	return ""
}

type SyncStreamItem_SyncActionDiffOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Client connects and sends a list of "have_operations" that exist in its log.
	// have_operation_ids and have_operation_modnos are the operation IDs and modnos that the client has when zip'd pairwise.
	HaveOperationsSelector *OpSelector `protobuf:"bytes,1,opt,name=have_operations_selector,json=haveOperationsSelector,proto3" json:"have_operations_selector,omitempty"`
	HaveOperationIds       []int64     `protobuf:"varint,2,rep,packed,name=have_operation_ids,json=haveOperationIds,proto3" json:"have_operation_ids,omitempty"`
	HaveOperationModnos    []int64     `protobuf:"varint,3,rep,packed,name=have_operation_modnos,json=haveOperationModnos,proto3" json:"have_operation_modnos,omitempty"`
	// Server sends a list of "request_operations" for any operations that it doesn't have.
	RequestOperations []int64 `protobuf:"varint,4,rep,packed,name=request_operations,json=requestOperations,proto3" json:"request_operations,omitempty"`
}

func (x *SyncStreamItem_SyncActionDiffOperations) Reset() {
	*x = SyncStreamItem_SyncActionDiffOperations{}
	mi := &file_v1_syncservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionDiffOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionDiffOperations) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionDiffOperations) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionDiffOperations.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionDiffOperations) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 3}
}

func (x *SyncStreamItem_SyncActionDiffOperations) GetHaveOperationsSelector() *OpSelector {
	if x != nil {
		return x.HaveOperationsSelector
	}
	return nil
}

func (x *SyncStreamItem_SyncActionDiffOperations) GetHaveOperationIds() []int64 {
	if x != nil {
		return x.HaveOperationIds
	}
	return nil
}

func (x *SyncStreamItem_SyncActionDiffOperations) GetHaveOperationModnos() []int64 {
	if x != nil {
		return x.HaveOperationModnos
	}
	return nil
}

func (x *SyncStreamItem_SyncActionDiffOperations) GetRequestOperations() []int64 {
	if x != nil {
		return x.RequestOperations
	}
	return nil
}

type SyncStreamItem_SyncActionSendOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *OperationEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SyncStreamItem_SyncActionSendOperations) Reset() {
	*x = SyncStreamItem_SyncActionSendOperations{}
	mi := &file_v1_syncservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionSendOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionSendOperations) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionSendOperations) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionSendOperations.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionSendOperations) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 4}
}

func (x *SyncStreamItem_SyncActionSendOperations) GetEvent() *OperationEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type SyncStreamItem_SyncActionThrottle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelayMs int64 `protobuf:"varint,1,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`
}

func (x *SyncStreamItem_SyncActionThrottle) Reset() {
	*x = SyncStreamItem_SyncActionThrottle{}
	mi := &file_v1_syncservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncActionThrottle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncActionThrottle) ProtoMessage() {}

func (x *SyncStreamItem_SyncActionThrottle) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncActionThrottle.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncActionThrottle) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 5}
}

func (x *SyncStreamItem_SyncActionThrottle) GetDelayMs() int64 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

type SyncStreamItem_SyncEstablishSharedSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a one-time-use ed25519 public key with a matching unshared private key. Used to perform a key exchange.
	// See https://pkg.go.dev/crypto/ecdh#PrivateKey.ECDH .
	Ed25519 string `protobuf:"bytes,2,opt,name=ed25519,json=ed25519pub,proto3" json:"ed25519,omitempty"` // base64 encoded public key
}

func (x *SyncStreamItem_SyncEstablishSharedSecret) Reset() {
	*x = SyncStreamItem_SyncEstablishSharedSecret{}
	mi := &file_v1_syncservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStreamItem_SyncEstablishSharedSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamItem_SyncEstablishSharedSecret) ProtoMessage() {}

func (x *SyncStreamItem_SyncEstablishSharedSecret) ProtoReflect() protoreflect.Message {
	mi := &file_v1_syncservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamItem_SyncEstablishSharedSecret.ProtoReflect.Descriptor instead.
func (*SyncStreamItem_SyncEstablishSharedSecret) Descriptor() ([]byte, []int) {
	return file_v1_syncservice_proto_rawDescGZIP(), []int{1, 6}
}

func (x *SyncStreamItem_SyncEstablishSharedSecret) GetEd25519() string {
	if x != nil {
		return x.Ed25519
	}
	return ""
}

var File_v1_syncservice_proto protoreflect.FileDescriptor

var file_v1_syncservice_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31, 0x2f,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x1a, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x22, 0xc1, 0x0b, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x46, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x64, 0x69, 0x66,
	0x66, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x66, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x64, 0x69, 0x66, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x56, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x66, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x48, 0x00, 0x52, 0x15, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a,
	0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x1a, 0xa2, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x30, 0x0a, 0x15, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x1a, 0xf5, 0x01, 0x0a,
	0x18, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x18, 0x68, 0x61, 0x76,
	0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x16, 0x68, 0x61, 0x76,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x10, 0x68, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x6e, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x13, 0x68, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x6e, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2f, 0x0a, 0x12, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x73, 0x1a, 0x38, 0x0a, 0x19, 0x53,
	0x79, 0x6e, 0x63, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x64, 0x32, 0x35,
	0x35, 0x31, 0x39, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x64, 0x32, 0x35, 0x35,
	0x31, 0x39, 0x70, 0x75, 0x62, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x22, 0x86, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x2a, 0xfb, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49,
	0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x04, 0x12, 0x1f, 0x0a,
	0x1b, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x0a, 0x12, 0x23,
	0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x10, 0x0b, 0x32, 0x93, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x72, 0x65, 0x74, 0x68, 0x67, 0x65,
	0x6f, 0x72, 0x67, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_syncservice_proto_rawDescOnce sync.Once
	file_v1_syncservice_proto_rawDescData = file_v1_syncservice_proto_rawDesc
)

func file_v1_syncservice_proto_rawDescGZIP() []byte {
	file_v1_syncservice_proto_rawDescOnce.Do(func() {
		file_v1_syncservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_syncservice_proto_rawDescData)
	})
	return file_v1_syncservice_proto_rawDescData
}

var file_v1_syncservice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_syncservice_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_syncservice_proto_goTypes = []any{
	(SyncConnectionState)(0),                          // 0: v1.SyncConnectionState
	(SyncStreamItem_RepoConnectionState)(0),           // 1: v1.SyncStreamItem.RepoConnectionState
	(*GetRemoteReposResponse)(nil),                    // 2: v1.GetRemoteReposResponse
	(*SyncStreamItem)(nil),                            // 3: v1.SyncStreamItem
	(*RemoteConfig)(nil),                              // 4: v1.RemoteConfig
	(*RemoteRepo)(nil),                                // 5: v1.RemoteRepo
	(*GetRemoteReposResponse_RemoteRepoMetadata)(nil), // 6: v1.GetRemoteReposResponse.RemoteRepoMetadata
	(*SyncStreamItem_SyncActionHandshake)(nil),        // 7: v1.SyncStreamItem.SyncActionHandshake
	(*SyncStreamItem_SyncActionSendConfig)(nil),       // 8: v1.SyncStreamItem.SyncActionSendConfig
	(*SyncStreamItem_SyncActionConnectRepo)(nil),      // 9: v1.SyncStreamItem.SyncActionConnectRepo
	(*SyncStreamItem_SyncActionDiffOperations)(nil),   // 10: v1.SyncStreamItem.SyncActionDiffOperations
	(*SyncStreamItem_SyncActionSendOperations)(nil),   // 11: v1.SyncStreamItem.SyncActionSendOperations
	(*SyncStreamItem_SyncActionThrottle)(nil),         // 12: v1.SyncStreamItem.SyncActionThrottle
	(*SyncStreamItem_SyncEstablishSharedSecret)(nil),  // 13: v1.SyncStreamItem.SyncEstablishSharedSecret
	(*SignedMessage)(nil),                             // 14: v1.SignedMessage
	(*PublicKey)(nil),                                 // 15: v1.PublicKey
	(*OpSelector)(nil),                                // 16: v1.OpSelector
	(*OperationEvent)(nil),                            // 17: v1.OperationEvent
	(*emptypb.Empty)(nil),                             // 18: google.protobuf.Empty
}
var file_v1_syncservice_proto_depIdxs = []int32{
	6,  // 0: v1.GetRemoteReposResponse.repos:type_name -> v1.GetRemoteReposResponse.RemoteRepoMetadata
	14, // 1: v1.SyncStreamItem.signed_message:type_name -> v1.SignedMessage
	7,  // 2: v1.SyncStreamItem.handshake:type_name -> v1.SyncStreamItem.SyncActionHandshake
	10, // 3: v1.SyncStreamItem.diff_operations:type_name -> v1.SyncStreamItem.SyncActionDiffOperations
	11, // 4: v1.SyncStreamItem.send_operations:type_name -> v1.SyncStreamItem.SyncActionSendOperations
	8,  // 5: v1.SyncStreamItem.send_config:type_name -> v1.SyncStreamItem.SyncActionSendConfig
	13, // 6: v1.SyncStreamItem.establish_shared_secret:type_name -> v1.SyncStreamItem.SyncEstablishSharedSecret
	12, // 7: v1.SyncStreamItem.throttle:type_name -> v1.SyncStreamItem.SyncActionThrottle
	5,  // 8: v1.RemoteConfig.repos:type_name -> v1.RemoteRepo
	15, // 9: v1.SyncStreamItem.SyncActionHandshake.public_key:type_name -> v1.PublicKey
	14, // 10: v1.SyncStreamItem.SyncActionHandshake.instance_id:type_name -> v1.SignedMessage
	4,  // 11: v1.SyncStreamItem.SyncActionSendConfig.config:type_name -> v1.RemoteConfig
	16, // 12: v1.SyncStreamItem.SyncActionDiffOperations.have_operations_selector:type_name -> v1.OpSelector
	17, // 13: v1.SyncStreamItem.SyncActionSendOperations.event:type_name -> v1.OperationEvent
	3,  // 14: v1.BackrestSyncService.Sync:input_type -> v1.SyncStreamItem
	18, // 15: v1.BackrestSyncService.GetRemoteRepos:input_type -> google.protobuf.Empty
	3,  // 16: v1.BackrestSyncService.Sync:output_type -> v1.SyncStreamItem
	2,  // 17: v1.BackrestSyncService.GetRemoteRepos:output_type -> v1.GetRemoteReposResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_v1_syncservice_proto_init() }
func file_v1_syncservice_proto_init() {
	if File_v1_syncservice_proto != nil {
		return
	}
	file_v1_config_proto_init()
	file_v1_crypto_proto_init()
	file_v1_restic_proto_init()
	file_v1_service_proto_init()
	file_v1_operations_proto_init()
	file_v1_syncservice_proto_msgTypes[1].OneofWrappers = []any{
		(*SyncStreamItem_SignedMessage)(nil),
		(*SyncStreamItem_Handshake)(nil),
		(*SyncStreamItem_DiffOperations)(nil),
		(*SyncStreamItem_SendOperations)(nil),
		(*SyncStreamItem_SendConfig)(nil),
		(*SyncStreamItem_EstablishSharedSecret)(nil),
		(*SyncStreamItem_Throttle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_syncservice_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_syncservice_proto_goTypes,
		DependencyIndexes: file_v1_syncservice_proto_depIdxs,
		EnumInfos:         file_v1_syncservice_proto_enumTypes,
		MessageInfos:      file_v1_syncservice_proto_msgTypes,
	}.Build()
	File_v1_syncservice_proto = out.File
	file_v1_syncservice_proto_rawDesc = nil
	file_v1_syncservice_proto_goTypes = nil
	file_v1_syncservice_proto_depIdxs = nil
}
