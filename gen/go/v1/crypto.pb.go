// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: v1/crypto.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignedMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Keyid           string                 `protobuf:"bytes,1,opt,name=keyid,proto3" json:"keyid,omitempty"`                      // a unique identifier generated as the SHA256 of the public key used to sign the message.
	Payload         []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                  // the payload
	Signature       []byte                 `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`              // the signature of the payload
	TimestampMillis int64                  `protobuf:"varint,4,opt,name=timestampMillis,proto3" json:"timestampMillis,omitempty"` // the timestamp in milliseconds since epoch when the message was signed. Must be within 5 minutes of the current time.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SignedMessage) Reset() {
	*x = SignedMessage{}
	mi := &file_v1_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedMessage) ProtoMessage() {}

func (x *SignedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedMessage.ProtoReflect.Descriptor instead.
func (*SignedMessage) Descriptor() ([]byte, []int) {
	return file_v1_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *SignedMessage) GetKeyid() string {
	if x != nil {
		return x.Keyid
	}
	return ""
}

func (x *SignedMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SignedMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedMessage) GetTimestampMillis() int64 {
	if x != nil {
		return x.TimestampMillis
	}
	return 0
}

type PublicKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyid         string                 `protobuf:"bytes,1,opt,name=keyid,json=keyId,proto3" json:"keyid,omitempty"` // a unique identifier generated as the SHA256 of the public key.
	Ed25519Pub    string                 `protobuf:"bytes,2,opt,name=ed25519pub,proto3" json:"ed25519pub,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_v1_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_v1_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_v1_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *PublicKey) GetKeyid() string {
	if x != nil {
		return x.Keyid
	}
	return ""
}

func (x *PublicKey) GetEd25519Pub() string {
	if x != nil {
		return x.Ed25519Pub
	}
	return ""
}

type PrivateKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyid         string                 `protobuf:"bytes,1,opt,name=keyid,json=keyId,proto3" json:"keyid,omitempty"` // a unique identifier generated as the SHA256 of the public key
	Ed25519Priv   string                 `protobuf:"bytes,2,opt,name=ed25519priv,proto3" json:"ed25519priv,omitempty"`
	Ed25519Pub    string                 `protobuf:"bytes,3,opt,name=ed25519pub,proto3" json:"ed25519pub,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	mi := &file_v1_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_v1_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_v1_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *PrivateKey) GetKeyid() string {
	if x != nil {
		return x.Keyid
	}
	return ""
}

func (x *PrivateKey) GetEd25519Priv() string {
	if x != nil {
		return x.Ed25519Priv
	}
	return ""
}

func (x *PrivateKey) GetEd25519Pub() string {
	if x != nil {
		return x.Ed25519Pub
	}
	return ""
}

var File_v1_crypto_proto protoreflect.FileDescriptor

const file_v1_crypto_proto_rawDesc = "" +
	"\n" +
	"\x0fv1/crypto.proto\x12\x02v1\"\x87\x01\n" +
	"\rSignedMessage\x12\x14\n" +
	"\x05keyid\x18\x01 \x01(\tR\x05keyid\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\fR\tsignature\x12(\n" +
	"\x0ftimestampMillis\x18\x04 \x01(\x03R\x0ftimestampMillis\"A\n" +
	"\tPublicKey\x12\x14\n" +
	"\x05keyid\x18\x01 \x01(\tR\x05keyId\x12\x1e\n" +
	"\n" +
	"ed25519pub\x18\x02 \x01(\tR\n" +
	"ed25519pub\"d\n" +
	"\n" +
	"PrivateKey\x12\x14\n" +
	"\x05keyid\x18\x01 \x01(\tR\x05keyId\x12 \n" +
	"\ved25519priv\x18\x02 \x01(\tR\ved25519priv\x12\x1e\n" +
	"\n" +
	"ed25519pub\x18\x03 \x01(\tR\n" +
	"ed25519pubB,Z*github.com/garethgeorge/backrest/gen/go/v1b\x06proto3"

var (
	file_v1_crypto_proto_rawDescOnce sync.Once
	file_v1_crypto_proto_rawDescData []byte
)

func file_v1_crypto_proto_rawDescGZIP() []byte {
	file_v1_crypto_proto_rawDescOnce.Do(func() {
		file_v1_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_crypto_proto_rawDesc), len(file_v1_crypto_proto_rawDesc)))
	})
	return file_v1_crypto_proto_rawDescData
}

var file_v1_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_crypto_proto_goTypes = []any{
	(*SignedMessage)(nil), // 0: v1.SignedMessage
	(*PublicKey)(nil),     // 1: v1.PublicKey
	(*PrivateKey)(nil),    // 2: v1.PrivateKey
}
var file_v1_crypto_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_crypto_proto_init() }
func file_v1_crypto_proto_init() {
	if File_v1_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_crypto_proto_rawDesc), len(file_v1_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_crypto_proto_goTypes,
		DependencyIndexes: file_v1_crypto_proto_depIdxs,
		MessageInfos:      file_v1_crypto_proto_msgTypes,
	}.Build()
	File_v1_crypto_proto = out.File
	file_v1_crypto_proto_goTypes = nil
	file_v1_crypto_proto_depIdxs = nil
}
