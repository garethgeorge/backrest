// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: v1sync/syncservice.proto

package v1sync

import (
	_ "github.com/garethgeorge/backrest/gen/go/types"
	v1 "github.com/garethgeorge/backrest/gen/go/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionState int32

const (
	ConnectionState_CONNECTION_STATE_UNKNOWN        ConnectionState = 0
	ConnectionState_CONNECTION_STATE_PENDING        ConnectionState = 1
	ConnectionState_CONNECTION_STATE_CONNECTED      ConnectionState = 2
	ConnectionState_CONNECTION_STATE_DISCONNECTED   ConnectionState = 3
	ConnectionState_CONNECTION_STATE_RETRY_WAIT     ConnectionState = 4
	ConnectionState_CONNECTION_STATE_ERROR_AUTH     ConnectionState = 10
	ConnectionState_CONNECTION_STATE_ERROR_PROTOCOL ConnectionState = 11
	ConnectionState_CONNECTION_STATE_ERROR_INTERNAL ConnectionState = 12
)

// Enum value maps for ConnectionState.
var (
	ConnectionState_name = map[int32]string{
		0:  "CONNECTION_STATE_UNKNOWN",
		1:  "CONNECTION_STATE_PENDING",
		2:  "CONNECTION_STATE_CONNECTED",
		3:  "CONNECTION_STATE_DISCONNECTED",
		4:  "CONNECTION_STATE_RETRY_WAIT",
		10: "CONNECTION_STATE_ERROR_AUTH",
		11: "CONNECTION_STATE_ERROR_PROTOCOL",
		12: "CONNECTION_STATE_ERROR_INTERNAL",
	}
	ConnectionState_value = map[string]int32{
		"CONNECTION_STATE_UNKNOWN":        0,
		"CONNECTION_STATE_PENDING":        1,
		"CONNECTION_STATE_CONNECTED":      2,
		"CONNECTION_STATE_DISCONNECTED":   3,
		"CONNECTION_STATE_RETRY_WAIT":     4,
		"CONNECTION_STATE_ERROR_AUTH":     10,
		"CONNECTION_STATE_ERROR_PROTOCOL": 11,
		"CONNECTION_STATE_ERROR_INTERNAL": 12,
	}
)

func (x ConnectionState) Enum() *ConnectionState {
	p := new(ConnectionState)
	*p = x
	return p
}

func (x ConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_v1sync_syncservice_proto_enumTypes[0].Descriptor()
}

func (ConnectionState) Type() protoreflect.EnumType {
	return &file_v1sync_syncservice_proto_enumTypes[0]
}

func (x ConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionState.Descriptor instead.
func (ConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{0}
}

type SyncStateStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subscribe     bool                   `protobuf:"varint,1,opt,name=subscribe,proto3" json:"subscribe,omitempty"` // If true, the stream will continue to send updates until cancelled.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncStateStreamRequest) Reset() {
	*x = SyncStateStreamRequest{}
	mi := &file_v1sync_syncservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStateStreamRequest) ProtoMessage() {}

func (x *SyncStateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStateStreamRequest.ProtoReflect.Descriptor instead.
func (*SyncStateStreamRequest) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{0}
}

func (x *SyncStateStreamRequest) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

type PeerState struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PeerInstanceId      string                 `protobuf:"bytes,1,opt,name=peer_instance_id,json=peerInstanceId,proto3" json:"peer_instance_id,omitempty"`
	PeerKeyid           string                 `protobuf:"bytes,2,opt,name=peer_keyid,json=peerKeyid,proto3" json:"peer_keyid,omitempty"`
	State               ConnectionState        `protobuf:"varint,3,opt,name=state,proto3,enum=v1sync.ConnectionState" json:"state,omitempty"`
	StatusMessage       string                 `protobuf:"bytes,4,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	KnownPlans          []*PlanMetadata        `protobuf:"bytes,5,rep,name=known_plans,json=knownPlans,proto3" json:"known_plans,omitempty"`                               // List of plan IDs that the peer has.
	KnownRepos          []*RepoMetadata        `protobuf:"bytes,6,rep,name=known_repos,json=knownRepos,proto3" json:"known_repos,omitempty"`                               // List of repo IDs that the peer has.
	RemoteConfig        *RemoteConfig          `protobuf:"bytes,7,opt,name=remote_config,json=remoteConfig,proto3" json:"remote_config,omitempty"`                         // The remote config of the peer, if available.
	LastHeartbeatMillis int64                  `protobuf:"varint,8,opt,name=last_heartbeat_millis,json=lastHeartbeatMillis,proto3" json:"last_heartbeat_millis,omitempty"` // The last time the peer sent a heartbeat, in milliseconds since epoch.
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PeerState) Reset() {
	*x = PeerState{}
	mi := &file_v1sync_syncservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerState) ProtoMessage() {}

func (x *PeerState) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerState.ProtoReflect.Descriptor instead.
func (*PeerState) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{1}
}

func (x *PeerState) GetPeerInstanceId() string {
	if x != nil {
		return x.PeerInstanceId
	}
	return ""
}

func (x *PeerState) GetPeerKeyid() string {
	if x != nil {
		return x.PeerKeyid
	}
	return ""
}

func (x *PeerState) GetState() ConnectionState {
	if x != nil {
		return x.State
	}
	return ConnectionState_CONNECTION_STATE_UNKNOWN
}

func (x *PeerState) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *PeerState) GetKnownPlans() []*PlanMetadata {
	if x != nil {
		return x.KnownPlans
	}
	return nil
}

func (x *PeerState) GetKnownRepos() []*RepoMetadata {
	if x != nil {
		return x.KnownRepos
	}
	return nil
}

func (x *PeerState) GetRemoteConfig() *RemoteConfig {
	if x != nil {
		return x.RemoteConfig
	}
	return nil
}

func (x *PeerState) GetLastHeartbeatMillis() int64 {
	if x != nil {
		return x.LastHeartbeatMillis
	}
	return 0
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    *v1.SignedMessage      `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // The ID of the peer instance.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_v1sync_syncservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{2}
}

func (x *AuthenticateRequest) GetInstanceId() *v1.SignedMessage {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

type GetOperationMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpIds         []int64                `protobuf:"varint,1,rep,packed,name=op_ids,json=opIds,proto3" json:"op_ids,omitempty"` // The IDs of the operations.
	Modnos        []int64                `protobuf:"varint,2,rep,packed,name=modnos,proto3" json:"modnos,omitempty"`            // The modnos of the operations.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperationMetadataResponse) Reset() {
	*x = GetOperationMetadataResponse{}
	mi := &file_v1sync_syncservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperationMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationMetadataResponse) ProtoMessage() {}

func (x *GetOperationMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetOperationMetadataResponse) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetOperationMetadataResponse) GetOpIds() []int64 {
	if x != nil {
		return x.OpIds
	}
	return nil
}

func (x *GetOperationMetadataResponse) GetModnos() []int64 {
	if x != nil {
		return x.Modnos
	}
	return nil
}

type LogDataEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`              // The ID of the log, only used for the first message in a log data stream.
	OwnerOpid     int64                  `protobuf:"varint,2,opt,name=owner_opid,json=ownerOpid,proto3" json:"owner_opid,omitempty"` // The operation ID of the operation that owns this log data.
	Chunk         [][]byte               `protobuf:"bytes,3,rep,name=chunk,proto3" json:"chunk,omitempty"`                           // The log data chunk, can be sent repeatedly, must be terminated by a packet with size = 0.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogDataEntry) Reset() {
	*x = LogDataEntry{}
	mi := &file_v1sync_syncservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogDataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDataEntry) ProtoMessage() {}

func (x *LogDataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDataEntry.ProtoReflect.Descriptor instead.
func (*LogDataEntry) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{4}
}

func (x *LogDataEntry) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *LogDataEntry) GetOwnerOpid() int64 {
	if x != nil {
		return x.OwnerOpid
	}
	return 0
}

func (x *LogDataEntry) GetChunk() [][]byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type SetAvailableResourcesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repos         []*PlanMetadata        `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"` // The repos that are available.
	Plans         []*RepoMetadata        `protobuf:"bytes,2,rep,name=plans,proto3" json:"plans,omitempty"` // The plans that are available.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAvailableResourcesRequest) Reset() {
	*x = SetAvailableResourcesRequest{}
	mi := &file_v1sync_syncservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAvailableResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAvailableResourcesRequest) ProtoMessage() {}

func (x *SetAvailableResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAvailableResourcesRequest.ProtoReflect.Descriptor instead.
func (*SetAvailableResourcesRequest) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{5}
}

func (x *SetAvailableResourcesRequest) GetRepos() []*PlanMetadata {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *SetAvailableResourcesRequest) GetPlans() []*RepoMetadata {
	if x != nil {
		return x.Plans
	}
	return nil
}

type RepoMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Guid          string                 `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepoMetadata) Reset() {
	*x = RepoMetadata{}
	mi := &file_v1sync_syncservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoMetadata) ProtoMessage() {}

func (x *RepoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoMetadata.ProtoReflect.Descriptor instead.
func (*RepoMetadata) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{6}
}

func (x *RepoMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RepoMetadata) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type PlanMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanMetadata) Reset() {
	*x = PlanMetadata{}
	mi := &file_v1sync_syncservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanMetadata) ProtoMessage() {}

func (x *PlanMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanMetadata.ProtoReflect.Descriptor instead.
func (*PlanMetadata) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{7}
}

func (x *PlanMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plans         []*v1.Plan             `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`                                        // The plans to set.
	Repos         []*v1.Repo             `protobuf:"bytes,2,rep,name=repos,proto3" json:"repos,omitempty"`                                        // The repos to set.
	ReposToDelete []string               `protobuf:"bytes,3,rep,name=repos_to_delete,json=reposToDelete,proto3" json:"repos_to_delete,omitempty"` // The repo IDs to delete.
	PlansToDelete []string               `protobuf:"bytes,4,rep,name=plans_to_delete,json=plansToDelete,proto3" json:"plans_to_delete,omitempty"` // The plan IDs to delete.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	mi := &file_v1sync_syncservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{8}
}

func (x *SetConfigRequest) GetPlans() []*v1.Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *SetConfigRequest) GetRepos() []*v1.Repo {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *SetConfigRequest) GetReposToDelete() []string {
	if x != nil {
		return x.ReposToDelete
	}
	return nil
}

func (x *SetConfigRequest) GetPlansToDelete() []string {
	if x != nil {
		return x.PlansToDelete
	}
	return nil
}

type RemoteConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Modno         int32                  `protobuf:"varint,1,opt,name=modno,proto3" json:"modno,omitempty"`     // The modno of the config.
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` // The storage version of the config.
	Repos         []*v1.Repo             `protobuf:"bytes,3,rep,name=repos,proto3" json:"repos,omitempty"`
	Plans         []*v1.Plan             `protobuf:"bytes,4,rep,name=plans,proto3" json:"plans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteConfig) Reset() {
	*x = RemoteConfig{}
	mi := &file_v1sync_syncservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfig) ProtoMessage() {}

func (x *RemoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_v1sync_syncservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfig.ProtoReflect.Descriptor instead.
func (*RemoteConfig) Descriptor() ([]byte, []int) {
	return file_v1sync_syncservice_proto_rawDescGZIP(), []int{9}
}

func (x *RemoteConfig) GetModno() int32 {
	if x != nil {
		return x.Modno
	}
	return 0
}

func (x *RemoteConfig) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RemoteConfig) GetRepos() []*v1.Repo {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *RemoteConfig) GetPlans() []*v1.Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

var File_v1sync_syncservice_proto protoreflect.FileDescriptor

const file_v1sync_syncservice_proto_rawDesc = "" +
	"\n" +
	"\x18v1sync/syncservice.proto\x12\x06v1sync\x1a\x0fv1/config.proto\x1a\x0fv1/crypto.proto\x1a\x0fv1/restic.proto\x1a\x10v1/service.proto\x1a\x13v1/operations.proto\x1a\x11types/value.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x19google/protobuf/any.proto\"6\n" +
	"\x16SyncStateStreamRequest\x12\x1c\n" +
	"\tsubscribe\x18\x01 \x01(\bR\tsubscribe\"\x87\x03\n" +
	"\tPeerState\x12(\n" +
	"\x10peer_instance_id\x18\x01 \x01(\tR\x0epeerInstanceId\x12\x1d\n" +
	"\n" +
	"peer_keyid\x18\x02 \x01(\tR\tpeerKeyid\x12-\n" +
	"\x05state\x18\x03 \x01(\x0e2\x17.v1sync.ConnectionStateR\x05state\x12%\n" +
	"\x0estatus_message\x18\x04 \x01(\tR\rstatusMessage\x125\n" +
	"\vknown_plans\x18\x05 \x03(\v2\x14.v1sync.PlanMetadataR\n" +
	"knownPlans\x125\n" +
	"\vknown_repos\x18\x06 \x03(\v2\x14.v1sync.RepoMetadataR\n" +
	"knownRepos\x129\n" +
	"\rremote_config\x18\a \x01(\v2\x14.v1sync.RemoteConfigR\fremoteConfig\x122\n" +
	"\x15last_heartbeat_millis\x18\b \x01(\x03R\x13lastHeartbeatMillis\"I\n" +
	"\x13AuthenticateRequest\x122\n" +
	"\vinstance_id\x18\x01 \x01(\v2\x11.v1.SignedMessageR\n" +
	"instanceId\"M\n" +
	"\x1cGetOperationMetadataResponse\x12\x15\n" +
	"\x06op_ids\x18\x01 \x03(\x03R\x05opIds\x12\x16\n" +
	"\x06modnos\x18\x02 \x03(\x03R\x06modnos\"Z\n" +
	"\fLogDataEntry\x12\x15\n" +
	"\x06log_id\x18\x01 \x01(\tR\x05logId\x12\x1d\n" +
	"\n" +
	"owner_opid\x18\x02 \x01(\x03R\townerOpid\x12\x14\n" +
	"\x05chunk\x18\x03 \x03(\fR\x05chunk\"v\n" +
	"\x1cSetAvailableResourcesRequest\x12*\n" +
	"\x05repos\x18\x01 \x03(\v2\x14.v1sync.PlanMetadataR\x05repos\x12*\n" +
	"\x05plans\x18\x02 \x03(\v2\x14.v1sync.RepoMetadataR\x05plans\"2\n" +
	"\fRepoMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04guid\x18\x02 \x01(\tR\x04guid\"\x1e\n" +
	"\fPlanMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xa2\x01\n" +
	"\x10SetConfigRequest\x12\x1e\n" +
	"\x05plans\x18\x01 \x03(\v2\b.v1.PlanR\x05plans\x12\x1e\n" +
	"\x05repos\x18\x02 \x03(\v2\b.v1.RepoR\x05repos\x12&\n" +
	"\x0frepos_to_delete\x18\x03 \x03(\tR\rreposToDelete\x12&\n" +
	"\x0fplans_to_delete\x18\x04 \x03(\tR\rplansToDelete\"~\n" +
	"\fRemoteConfig\x12\x14\n" +
	"\x05modno\x18\x01 \x01(\x05R\x05modno\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12\x1e\n" +
	"\x05repos\x18\x03 \x03(\v2\b.v1.RepoR\x05repos\x12\x1e\n" +
	"\x05plans\x18\x04 \x03(\v2\b.v1.PlanR\x05plans*\x9c\x02\n" +
	"\x0fConnectionState\x12\x1c\n" +
	"\x18CONNECTION_STATE_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18CONNECTION_STATE_PENDING\x10\x01\x12\x1e\n" +
	"\x1aCONNECTION_STATE_CONNECTED\x10\x02\x12!\n" +
	"\x1dCONNECTION_STATE_DISCONNECTED\x10\x03\x12\x1f\n" +
	"\x1bCONNECTION_STATE_RETRY_WAIT\x10\x04\x12\x1f\n" +
	"\x1bCONNECTION_STATE_ERROR_AUTH\x10\n" +
	"\x12#\n" +
	"\x1fCONNECTION_STATE_ERROR_PROTOCOL\x10\v\x12#\n" +
	"\x1fCONNECTION_STATE_ERROR_INTERNAL\x10\f2l\n" +
	"\x18BackrestSyncStateService\x12P\n" +
	"\x17GetPeerSyncStatesStream\x12\x1e.v1sync.SyncStateStreamRequest\x1a\x11.v1sync.PeerState\"\x000\x012\xfa\x03\n" +
	"\x0fSyncPeerService\x12E\n" +
	"\fAuthenticate\x12\x1b.v1sync.AuthenticateRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n" +
	"\x14GetOperationMetadata\x12\x0e.v1.OpSelector\x1a$.v1sync.GetOperationMetadataResponse\"\x00\x12;\n" +
	"\x0eSendOperations\x12\r.v1.Operation\x1a\x16.google.protobuf.Empty\"\x00(\x01\x12<\n" +
	"\bSendLogs\x12\x14.v1sync.LogDataEntry\x1a\x16.google.protobuf.Empty\"\x00(\x01\x12W\n" +
	"\x15SetAvailableResources\x12$.v1sync.SetAvailableResourcesRequest\x1a\x16.google.protobuf.Empty\"\x00\x12?\n" +
	"\tSetConfig\x12\x18.v1sync.SetConfigRequest\x1a\x16.google.protobuf.Empty\"\x00\x12;\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x14.v1sync.RemoteConfig\"\x00B0Z.github.com/garethgeorge/backrest/gen/go/v1syncb\x06proto3"

var (
	file_v1sync_syncservice_proto_rawDescOnce sync.Once
	file_v1sync_syncservice_proto_rawDescData []byte
)

func file_v1sync_syncservice_proto_rawDescGZIP() []byte {
	file_v1sync_syncservice_proto_rawDescOnce.Do(func() {
		file_v1sync_syncservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1sync_syncservice_proto_rawDesc), len(file_v1sync_syncservice_proto_rawDesc)))
	})
	return file_v1sync_syncservice_proto_rawDescData
}

var file_v1sync_syncservice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1sync_syncservice_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1sync_syncservice_proto_goTypes = []any{
	(ConnectionState)(0),                 // 0: v1sync.ConnectionState
	(*SyncStateStreamRequest)(nil),       // 1: v1sync.SyncStateStreamRequest
	(*PeerState)(nil),                    // 2: v1sync.PeerState
	(*AuthenticateRequest)(nil),          // 3: v1sync.AuthenticateRequest
	(*GetOperationMetadataResponse)(nil), // 4: v1sync.GetOperationMetadataResponse
	(*LogDataEntry)(nil),                 // 5: v1sync.LogDataEntry
	(*SetAvailableResourcesRequest)(nil), // 6: v1sync.SetAvailableResourcesRequest
	(*RepoMetadata)(nil),                 // 7: v1sync.RepoMetadata
	(*PlanMetadata)(nil),                 // 8: v1sync.PlanMetadata
	(*SetConfigRequest)(nil),             // 9: v1sync.SetConfigRequest
	(*RemoteConfig)(nil),                 // 10: v1sync.RemoteConfig
	(*v1.SignedMessage)(nil),             // 11: v1.SignedMessage
	(*v1.Plan)(nil),                      // 12: v1.Plan
	(*v1.Repo)(nil),                      // 13: v1.Repo
	(*v1.OpSelector)(nil),                // 14: v1.OpSelector
	(*v1.Operation)(nil),                 // 15: v1.Operation
	(*emptypb.Empty)(nil),                // 16: google.protobuf.Empty
}
var file_v1sync_syncservice_proto_depIdxs = []int32{
	0,  // 0: v1sync.PeerState.state:type_name -> v1sync.ConnectionState
	8,  // 1: v1sync.PeerState.known_plans:type_name -> v1sync.PlanMetadata
	7,  // 2: v1sync.PeerState.known_repos:type_name -> v1sync.RepoMetadata
	10, // 3: v1sync.PeerState.remote_config:type_name -> v1sync.RemoteConfig
	11, // 4: v1sync.AuthenticateRequest.instance_id:type_name -> v1.SignedMessage
	8,  // 5: v1sync.SetAvailableResourcesRequest.repos:type_name -> v1sync.PlanMetadata
	7,  // 6: v1sync.SetAvailableResourcesRequest.plans:type_name -> v1sync.RepoMetadata
	12, // 7: v1sync.SetConfigRequest.plans:type_name -> v1.Plan
	13, // 8: v1sync.SetConfigRequest.repos:type_name -> v1.Repo
	13, // 9: v1sync.RemoteConfig.repos:type_name -> v1.Repo
	12, // 10: v1sync.RemoteConfig.plans:type_name -> v1.Plan
	1,  // 11: v1sync.BackrestSyncStateService.GetPeerSyncStatesStream:input_type -> v1sync.SyncStateStreamRequest
	3,  // 12: v1sync.SyncPeerService.Authenticate:input_type -> v1sync.AuthenticateRequest
	14, // 13: v1sync.SyncPeerService.GetOperationMetadata:input_type -> v1.OpSelector
	15, // 14: v1sync.SyncPeerService.SendOperations:input_type -> v1.Operation
	5,  // 15: v1sync.SyncPeerService.SendLogs:input_type -> v1sync.LogDataEntry
	6,  // 16: v1sync.SyncPeerService.SetAvailableResources:input_type -> v1sync.SetAvailableResourcesRequest
	9,  // 17: v1sync.SyncPeerService.SetConfig:input_type -> v1sync.SetConfigRequest
	16, // 18: v1sync.SyncPeerService.GetConfig:input_type -> google.protobuf.Empty
	2,  // 19: v1sync.BackrestSyncStateService.GetPeerSyncStatesStream:output_type -> v1sync.PeerState
	16, // 20: v1sync.SyncPeerService.Authenticate:output_type -> google.protobuf.Empty
	4,  // 21: v1sync.SyncPeerService.GetOperationMetadata:output_type -> v1sync.GetOperationMetadataResponse
	16, // 22: v1sync.SyncPeerService.SendOperations:output_type -> google.protobuf.Empty
	16, // 23: v1sync.SyncPeerService.SendLogs:output_type -> google.protobuf.Empty
	16, // 24: v1sync.SyncPeerService.SetAvailableResources:output_type -> google.protobuf.Empty
	16, // 25: v1sync.SyncPeerService.SetConfig:output_type -> google.protobuf.Empty
	10, // 26: v1sync.SyncPeerService.GetConfig:output_type -> v1sync.RemoteConfig
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v1sync_syncservice_proto_init() }
func file_v1sync_syncservice_proto_init() {
	if File_v1sync_syncservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1sync_syncservice_proto_rawDesc), len(file_v1sync_syncservice_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_v1sync_syncservice_proto_goTypes,
		DependencyIndexes: file_v1sync_syncservice_proto_depIdxs,
		EnumInfos:         file_v1sync_syncservice_proto_enumTypes,
		MessageInfos:      file_v1sync_syncservice_proto_msgTypes,
	}.Build()
	File_v1sync_syncservice_proto = out.File
	file_v1sync_syncservice_proto_goTypes = nil
	file_v1sync_syncservice_proto_depIdxs = nil
}
